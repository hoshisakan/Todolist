{"version":3,"sources":["api.js","views/book/TodoList.js","views/book/AddTodo.js","views/book/dropdown_options.js","components/Timer/dateFormat.js","components/Timer/useInterval.js","assets/js/getWindowSize.js","components/Cards/color.js","assets/js/exportFile.js","views/book/CompletedTodoList.js","auth.js","route/routes.js","views/book/TodoBook.js","views/book/CompletedList.js","views/user/UserProfile.js","views/user/LoginPage.js","views/user/LogoutPage.js","views/user/RegisterPage.js","views/user/RegisterValidatePage.js","views/user/ApplyResetPasswordPage.js","views/user/ResetPasswordPage.js","components/Navbars/UserHeader.js","route/protected_route.js","route/auth_route.js","views/error/NotMatch404.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["apiAccountRequest","axios","create","baseURL","headers","Accept","apiBookTodoRequest","apiRefreshToken","data","post","apiLogoutRevokeToken","apiRegisterValidate","apiFetchBookTodo","order_by","is_checked","get","params","Authorization","localStorage","getItem","apiAddBookTodo","apiEditBookTodo","id","put","apiDeleteBookTodo","delete","apiCheckBookTodo","patch","is_read","apiExportBookTodo","export_type","responseType","TodoBook","props","setRequestUpdate","title","author","price","isRead","nationality","url","dueDate","lastModifyDate","createdAt","dueDays","willDueDays","currentWindowSize","cardColor","useState","updateId","setId","updateTitle","setTitle","updateAuthor","setAuthor","updatePrice","setPrice","updateNationality","setNationality","updateUrl","setURL","updateDueDate","setDueDate","editEnabled","setEditEnabled","displayDeleteConfirm","setDisplayDeleteConfirm","requestEditId","setRequestEditId","displayEditForm","setDisplayEditForm","showTitleFaildMsg","setShowTitleFaildMsg","showUrlFailedMsg","setShowUrlFailedMsg","titleFailedMsg","setTitleFailedMsg","urlFailedMsg","setUrlFailedMsg","cardWidth","setCardWidth","cardMinHeight","setCardMinHeight","x","y","lastTimeWindowSize","setLastTimeWindowSize","renderCardColor","checkUpdateAllow","setCheckUpdateAllow","handleUpdateEvent","a","due_date","then","res","catch","err","error_status_code","response","status","error_msg","error","handleDeleteItemEvent","displayDeleteItemConfirm","checkTodoCard","useEffect","Modal","show","backdrop","keyboard","Header","style","background","color","Title","Body","fontWeight","Footer","borderColor","Button","variant","onClick","className","minHeight","Card","width","Form","Group","controlId","Label","Control","as","placeholder","onChange","e","target","value","Row","Col","type","step","timeFormat","Text","fontSize","href","AddTodo","clearForm","addTodoRequest","console","disabled","length","orderByDropdownOptions","exportTodoListOptions","convertToLocalDateTime","convert_datetime","format","Date","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","getCurrentWindowSize","window","innerWidth","innerHeight","randomColor","Math","floor","random","exportTodoList","export_data","filename","require","file_downloader","toDateString","lastCompletedDate","revokeCompeltedItem","checkTokenExists","undefined","removeAllLocalStorage","clear","sessionStorage","UserRouter","path","name","icon","component","setCurrentWindowSize","todoListData","setTodoListData","updateData","setUpdateData","hide","setHide","orderBy","exportOption","setExportOption","handleExportCSV","initPageData","useCallback","info","fetchTodoList","Container","fluid","DropdownButton","ButtonGroup","onSelect","eventKey","event","setItem","map","options","index","Dropdown","Item","active","task","last_modify_date","created_at","due_days","will_due_days","hideTodoListItem","path_prefix","username","email","height","border","bg","text","AuthRouter","history","useHistory","setUsername","password","setPassword","displayErrorMessage","setDisplayErrorMessage","errorMessage","setErrorMessage","cardBtnSpacing","setCardBtnSpacing","md","block","apiUserLogin","JSON","stringify","access_token","refresh_token","setToken","push","textAlign","marginRight","to","handleUserLogout","refresh","revokeToken","setEmail","rePassword","setRePassword","showRegisterSuccess","setShowRegisterSuccess","registerMsg","setRegisterMsg","usernameFieldAlert","setUsernameFieldAlert","emailFieldAlert","setEmailFieldAlert","displayReissueMsg","setDisplayReissueMsg","reissueMsg","setReissueMsg","clearReissueMessage","Alert","Heading","apiReissueRegister","apiRegisterUser","detail","search","useLocation","token","URLSearchParams","showJumpLoginModal","setJumpLoginModal","countdown","setCountdown","validateFailure","setValidateFailure","failureAlertMsg","setFailureAlertMsg","handleLoginRedirect","checkToken","validateRegisterToken","applySuccess","setApplySuccess","applyFailure","setApplyFailure","apiApplyResetPassword","newPassword","setNewPassword","reNewPassword","setReNewPassword","resetFailure","setResetFailure","errorMsg","setErrorMsg","apiResetPassword","new_password","UserHeader","location","Navbar","expand","collapseOnSelect","Brand","i","pathname","indexOf","getBrandText","Toggle","Collapse","Nav","NavDropdown","Link","Divider","ProtectedRoutes","mainPanel","allowRender","setAllowRender","checkTokenExpireTime","setCheckTokenExpireTime","checkUserAuth","fetchUserProfile","res_data","refreshTokenRequest","token_time_left","fetchUserAuth","renderRoute","routes","route","prop","render","getRoutes","ref","AuthRoutes","NotMatch404","App","prefix","String","split","replace","current_access_path","exect","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.81e2e983.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst apiAccountRequest = axios.create({\n    // baseURL: 'http://192.168.1.112:9001/api/users',\n    // baseURL: 'http://192.168.1.112:9028/api/users',\n    baseURL: 'https://todolist.serveirc.com/api/users',\n    headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    },\n})\n\nconst apiBookTodoRequest = axios.create({\n    // baseURL: 'http://192.168.1.112:9001/api/book',\n    // baseURL: 'http://192.168.1.112:9028/api/book',\n    baseURL: 'https://todolist.serveirc.com/api/book',\n    headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    },\n})\n\nexport const apiUserLogin = (data) => apiAccountRequest.post('/sign-in', data)\n\nexport const apiRefreshToken = (data) => apiAccountRequest.post('/token-refresh', data)\n\n// export const apiRefreshToken = (data) =>\n//     apiAccountRequest.post('/token-refresh', data, {\n//         headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n//     })\n\n// For use headers send access token, such as 'Authorization Bearer token'\n// export const apiUpdateUserProfile = () =>\n//     apiAccountRequest.post(\n//         '/profile',\n//         {},\n//         {\n//             headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n//         }\n//     )\n\nexport const apiUpdateUserProfile = () =>\n    apiAccountRequest.get('/profile', {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\n    })\n\nexport const apiLogoutRevokeToken = (data) => apiAccountRequest.post('/logout', data)\n\nexport const apiRegisterUser = (data) => apiAccountRequest.post('', data)\n\nexport const apiApplyResetPassword = (data) => apiAccountRequest.post('/forget-password', data)\n\nexport const apiResetPassword = (data) => apiAccountRequest.post('/reset-password', data)\n\nexport const apiRegisterValidate = (data) => apiAccountRequest.post('/validate-account', data)\n\nexport const apiReissueRegister = (data) => apiAccountRequest.post('/reissue-activate', data)\n\n// export const apiTokenExpireCheck = () =>\n//     apiAccountRequest.get(\n//         '/token-expire-check',\n//         {\n//             headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n//         }\n//     )\n\nexport const apiTokenExpireCheck = () =>\n    apiAccountRequest.post('/token-expire-check', {\n        token: localStorage.getItem('access_token'),\n    })\n\n// GET Method send params\nexport const apiFetchBookTodo = (order_by, is_checked) =>\n    apiBookTodoRequest.get('', {\n        params: {\n            order_by: order_by,\n            is_checked: is_checked,\n        },\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\n    })\n\nexport const apiAddBookTodo = (data) =>\n    apiBookTodoRequest.post('', data, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\n    })\n\nexport const apiEditBookTodo = (id, data) =>\n    apiBookTodoRequest.put(`/${id}`, data, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\n    })\n\nexport const apiDeleteBookTodo = (id) =>\n    apiBookTodoRequest.delete(`/${id}`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\n    })\n\nexport const apiCheckBookTodo = (id, is_checked) =>\n    apiBookTodoRequest.patch(\n        `/${id}`,\n        {\n            is_read: is_checked,\n        },\n        {\n            headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\n        }\n    )\n\nexport const apiExportBookTodo = (is_checked, order_by, export_type) =>\n    apiBookTodoRequest.get('/export-todo', {\n        params: {\n            is_checked: is_checked,\n            order_by: order_by,\n            export_type: export_type,\n        },\n        headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n            'Content-Type': 'text/csv'\n        },\n        responseType: 'blob',\n    })\n","import React, { useState, useEffect } from 'react'\nimport { Button, Card, Modal, Form, Row, Col } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiDeleteBookTodo, apiEditBookTodo, apiCheckBookTodo } from '../../api.js'\n\nexport default function TodoBook(props) {\n    const {\n        setRequestUpdate,\n        id,\n        title,\n        author,\n        price,\n        isRead,\n        nationality,\n        url,\n        dueDate,\n        // daysSinceCreated,\n        lastModifyDate,\n        createdAt,\n        dueDays,\n        willDueDays,\n        currentWindowSize,\n        cardColor,\n    } = props\n    const [updateId, setId] = useState(id)\n    const [updateTitle, setTitle] = useState(title)\n    const [updateAuthor, setAuthor] = useState(author)\n    const [updatePrice, setPrice] = useState(price)\n    const [updateNationality, setNationality] = useState(nationality)\n    const [updateUrl, setURL] = useState(url)\n    const [updateDueDate, setDueDate] = useState(dueDate)\n    const [editEnabled, setEditEnabled] = useState(false)\n    const [displayDeleteConfirm, setDisplayDeleteConfirm] = useState(false)\n    const [requestEditId, setRequestEditId] = useState(0)\n    const [displayEditForm, setDisplayEditForm] = useState(false)\n    const [showTitleFaildMsg, setShowTitleFaildMsg] = useState(false)\n    const [showUrlFailedMsg, setShowUrlFailedMsg] = useState(false)\n    const [titleFailedMsg, setTitleFailedMsg] = useState('')\n    const [urlFailedMsg, setUrlFailedMsg] = useState('')\n    const [cardWidth, setCardWidth] = useState('33rem')\n    const [cardMinHeight, setCardMinHeight] = useState('45vh')\n    const [lastTimeWindowSize, setLastTimeWindowSize] = useState({\n        x: 0,\n        y: 0,\n    })\n    const [renderCardColor] = useState(cardColor)\n    const [checkUpdateAllow, setCheckUpdateAllow] = useState(false)\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleAuthorChange = (e) => {\n        setAuthor(e.target.value)\n    }\n\n    const handlePriceChange = (e) => {\n        setPrice(e.target.value)\n    }\n\n    const handleNationalityChange = (e) => {\n        setNationality(e.target.value)\n    }\n\n    const handleURLChange = (e) => {\n        setURL(e.target.value)\n    }\n\n    const handleDueDateChange = (e) => {\n        setDueDate(e.target.value)\n    }\n\n    const clearErrorMsg = () => {\n        setTitleFailedMsg('')\n        setUrlFailedMsg('')\n    }\n\n    const handleUpdateEvent = async () => {\n        clearErrorMsg()\n        let data = {\n            title: updateTitle,\n            author: updateAuthor,\n            price: updatePrice,\n            nationality: updateNationality,\n            url: updateUrl,\n            due_date: updateDueDate,\n        }\n        await apiEditBookTodo(id, data)\n            .then((res) => {\n                if (res.data['is_updated']) {\n                    setRequestUpdate(1)\n                    setDisplayEditForm(false)\n                    setEditEnabled(false)\n                }\n            })\n            .catch((err) => {\n                // console.error(err.response.data.error)\n                let error_status_code = err.response.status\n                let error_msg = err.response.data.error\n                if (error_status_code === 400) {\n                    if (error_msg['is_title_exists'] && error_msg['is_url_exists']) {\n                        setTitleFailedMsg('The title has been exists')\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(true)\n                    } else if (error_msg['is_title_exists'] && error_msg['is_url_exists'] === false) {\n                        setTitleFailedMsg('The title has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(false)\n                    } else if (error_msg['is_title_exists'] === false && error_msg['is_url_exists']) {\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(false)\n                        setShowUrlFailedMsg(true)\n                    }\n                }\n                setRequestUpdate(-1)\n            })\n        setCheckUpdateAllow(true)\n    }\n\n    const handleUpdateCancelEvent = () => {\n        setRequestUpdate(1)\n        setCheckUpdateAllow(true)\n        setDisplayEditForm(false)\n        setEditEnabled(false)\n    }\n\n    const handleDeleteItemEvent = async () => {\n        await apiDeleteBookTodo(id)\n            .then((res) => {\n                setRequestUpdate(1)\n            })\n            .catch((err) => {\n                // console.error(err)\n                setRequestUpdate(-1)\n            })\n    }\n\n    const handleCancelDeleteItemEvent = () => {\n        setDisplayDeleteConfirm(false)\n    }\n\n    const displayDeleteItemConfirm = async () => {\n        setDisplayDeleteConfirm(true)\n    }\n\n    const changeEditCard = () => {\n        setCheckUpdateAllow(true)\n        setRequestEditId(updateId)\n        setEditEnabled(true)\n        setDisplayEditForm(true)\n    }\n\n    const checkTodoCard = async () => {\n        await apiCheckBookTodo(id, true)\n            .then((res) => {\n                setRequestUpdate(1)\n            })\n            .catch((err) => {\n                // console.error(err)\n                setRequestUpdate(-1)\n            })\n    }\n\n    useEffect(() => {\n        const updatePropsData = () => {\n            setId(id)\n            setTitle(title)\n            setAuthor(author)\n            setPrice(price)\n            setNationality(nationality)\n            setURL(url)\n            setDueDate(dueDate)\n            // setDaysSinceCreated(daysSinceCreated)\n            setCheckUpdateAllow(false)\n        }\n        const updateWindowSize = () => {\n            if (lastTimeWindowSize.x !== currentWindowSize.x) {\n                if (currentWindowSize.x < 1000) {\n                    // setCardWidth('24rem')\n                    setCardWidth('23rem')\n                    setCardMinHeight('48vh')\n                } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n                    // setCardWidth('28rem')\n                    setCardWidth('33rem')\n                    setCardMinHeight('42vh')\n                } else if (currentWindowSize.x > 1600 && currentWindowSize.x < 1900) {\n                    // setCardWidth('28rem')\n                    setCardWidth('40rem')\n                    setCardMinHeight('35vh')\n                } else {\n                    setCardWidth('40rem')\n                    setCardMinHeight('33vh')\n                }\n                setLastTimeWindowSize(currentWindowSize)\n                // setRenderCardColor(cardColor) // 當偵測到視窗尺寸有變化時，則會重新渲染卡片的顏色\n            }\n            setLastTimeWindowSize(currentWindowSize)\n            // }, [cardColor, currentWindowSize, lastTimeWindowSize])\n        }\n        if (checkUpdateAllow) {\n            updatePropsData()\n        }\n        updateWindowSize()\n    }, [author, checkUpdateAllow, currentWindowSize, dueDate, id, lastTimeWindowSize.x, nationality, price, title, url])\n\n    return (\n        <div>\n            <Modal show={displayDeleteConfirm} backdrop=\"static\" keyboard={false}>\n                <Modal.Header style={{ background: renderCardColor, color: 'white' }}>\n                    <Modal.Title>\n                        <p>Confirm delete</p>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Are you sure you want to delete this item <span style={{ fontWeight: 'bold' }}> {title}</span> ?\n                </Modal.Body>\n                <Modal.Footer style={{ borderColor: renderCardColor }}>\n                    <Button variant=\"primary\" onClick={handleDeleteItemEvent}>\n                        Yes\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleCancelDeleteItemEvent}>\n                        No\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <div className=\"book-todo-root-1\" style={{ minHeight: cardMinHeight }}>\n                {editEnabled && id === requestEditId ? (\n                    <div>\n                        {displayEditForm ? (\n                            <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                                <Card.Header\n                                    variant=\"primary\"\n                                    className=\"book-todo-card-header\"\n                                    style={{ background: renderCardColor }}\n                                >\n                                    Edit {title}\n                                </Card.Header>\n                                <Card.Body>\n                                    <Form.Group controlId=\"formTitle\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Title</Form.Label>\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            placeholder=\"Title\"\n                                            onChange={handleTitleChange}\n                                            value={updateTitle}\n                                        />\n                                        {showTitleFaildMsg ? (\n                                            <p className=\"field-error-remind\">{titleFailedMsg}</p>\n                                        ) : null}\n                                    </Form.Group>\n                                    <Row>\n                                        <Form.Group as={Col} controlId=\"formAuthor\" className=\"align-items-left-2\">\n                                            <Form.Label className=\"form-horizontal.control-label\">Author</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                placeholder=\"Author\"\n                                                onChange={handleAuthorChange}\n                                                value={updateAuthor}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group as={Col} controlId=\"formPrice\" className=\"align-items-left-2\">\n                                            <Form.Label className=\"form-horizontal.control-label\">\n                                                Nationality\n                                            </Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                placeholder=\"Nationality\"\n                                                onChange={handleNationalityChange}\n                                                value={updateNationality}\n                                            />\n                                        </Form.Group>\n                                    </Row>\n                                    <Form.Group controlId=\"formPrice\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Price</Form.Label>\n                                        <Form.Control\n                                            type=\"number\"\n                                            step=\"any\"\n                                            placeholder=\"Price\"\n                                            onChange={handlePriceChange}\n                                            value={updatePrice}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formURL\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">URL</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"URL\"\n                                            onChange={handleURLChange}\n                                            value={updateUrl}\n                                        />\n                                        {showUrlFailedMsg ? <p className=\"field-error-remind\">{urlFailedMsg}</p> : null}\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formDueDate\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Due Date</Form.Label>\n                                        <Form.Control\n                                            type=\"date\"\n                                            placeholder=\"Due Date\"\n                                            onChange={handleDueDateChange}\n                                            value={updateDueDate}\n                                            timeFormat=\"YYYY-MM-DD\"\n                                        />\n                                    </Form.Group>\n                                    <div>\n                                        <Button\n                                            className=\"book-todo-btn-2\"\n                                            variant=\"primary\"\n                                            onClick={handleUpdateEvent}\n                                        >\n                                            Save changes\n                                        </Button>\n                                        <Button\n                                            className=\"book-todo-btn-2\"\n                                            variant=\"danger\"\n                                            onClick={handleUpdateCancelEvent}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        ) : null}\n                    </div>\n                ) : (\n                    <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                        <Card.Header\n                            variant=\"primary\"\n                            className=\"book-todo-card-header\"\n                            style={{ background: renderCardColor }}\n                        >\n                            {title}\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Title>\n                                {dueDays > 0 ? (\n                                    <p>\n                                        Due Date: {dueDate} ( Due {dueDays} days )\n                                    </p>\n                                ) : (\n                                    <p>\n                                        Due Date: {dueDate} ( Will due {willDueDays} days )\n                                    </p>\n                                )}\n                            </Card.Title>\n                            <Card.Text as=\"div\" style={{ fontSize: '17px' }}>\n                                Created At: {createdAt}\n                                <br />\n                                {nationality} - {author} - {price} - <a href={url}>Link</a>\n                                <br />\n                                {isRead ? 'Read' : 'Unread'}\n                                <br />\n                            </Card.Text>\n\n                            <div className=\"book-todo-btn-group-1\">\n                                <Button className=\"book-todo-btn-1\" variant=\"success\" onClick={checkTodoCard}>\n                                    Complete\n                                </Button>\n                                <Button className=\"book-todo-btn-1\" variant=\"primary\" onClick={changeEditCard}>\n                                    Edit\n                                </Button>\n                                <Button className=\"book-todo-btn-1\" variant=\"danger\" onClick={displayDeleteItemConfirm}>\n                                    Delete\n                                </Button>\n                            </div>\n                        </Card.Body>\n                        <Card.Footer style={{ borderColor: renderCardColor }}>\n                            <div style={{ fontWeight: 'bold' }}>Last Modified: {lastModifyDate}</div>\n                        </Card.Footer>\n                    </Card>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport '../../assets/css/form_level_style.css'\nimport { apiAddBookTodo } from '../../api.js'\nimport { Button, Card, Form, Row, Col } from 'react-bootstrap'\n\nexport default function AddTodo(props) {\n    const { setRequestUpdate, currentWindowSize, cardColor } = props\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [price, setPrice] = useState('')\n    const [nationality, setNationality] = useState('')\n    const [url, setURL] = useState('')\n    const [dueDate, setDueDate] = useState('')\n    const [showTitleFaildMsg, setShowTitleFaildMsg] = useState(false)\n    const [showUrlFailedMsg, setShowUrlFailedMsg] = useState(false)\n    const [titleFailedMsg, setTitleFailedMsg] = useState('')\n    const [urlFailedMsg, setUrlFailedMsg] = useState('')\n    const [lastTimeWindowSize, setLastTimeWindowSize] = useState({\n        x: 0,\n        y: 0,\n    })\n    const [cardWidth, setCardWidth] = useState('28rem')\n    const [cardMinHeight, setCardMinHeight] = useState('45vh')\n    const [renderCardColor] = useState(cardColor)\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleAuthorChange = (e) => {\n        setAuthor(e.target.value)\n    }\n\n    const handlePriceChange = (e) => {\n        setPrice(e.target.value)\n    }\n\n    const handleNationalityChange = (e) => {\n        setNationality(e.target.value)\n    }\n    const handleURLChange = (e) => {\n        setURL(e.target.value)\n    }\n    const handleDueDateChange = (e) => {\n        setDueDate(e.target.value)\n    }\n\n    const validateSubmitForm = () => {\n        return (\n            title.length > 0 &&\n            author.length > 0 &&\n            price.length > 0 &&\n            nationality.length > 0 &&\n            url.length > 0 &&\n            dueDate.length > 0\n        )\n    }\n\n    const clearForm = () => {\n        setTitle('')\n        setAuthor('')\n        setPrice('')\n        setNationality('')\n        setURL('')\n        setDueDate('')\n    }\n\n    const clearErrorMsg = () => {\n        setTitleFailedMsg('')\n        setUrlFailedMsg('')\n    }\n\n    const addTodoRequest = async () => {\n        clearErrorMsg()\n        let data = {\n            title: title,\n            author: author,\n            price: price,\n            // is_read: isRead,\n            nationality: nationality,\n            url: url,\n            due_date: dueDate,\n        }\n         await apiAddBookTodo(data)\n            .then((res) => {\n                if (res.data['is_writed']) {\n                    clearForm()\n                    setRequestUpdate(1)\n                }\n            })\n            .catch((err) => {\n                console.error(err)\n                let error_status_code = err.response.status\n                let error_msg = err.response.data.error\n                // console.error(error_status_code, error_msg)\n                if (error_status_code === 400) {\n                    if (error_msg['is_title_exists'] && error_msg['is_url_exists']) {\n                        setTitleFailedMsg('The title has been exists')\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(true)\n                    } else if (error_msg['is_title_exists'] && error_msg['is_url_exists'] === false) {\n                        setTitleFailedMsg('The title has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(false)\n                    } else if (error_msg['is_title_exists'] === false && error_msg['is_url_exists']) {\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(false)\n                        setShowUrlFailedMsg(true)\n                    }\n                }\n                // setRequestUpdate(-1)\n            })\n    }\n\n    const handleAddEvent = () => {\n        addTodoRequest()\n    }\n\n    const handleCancelEvent = () => {\n        clearForm()\n        setRequestUpdate(0)\n    }\n\n    useEffect(() => {\n        if (lastTimeWindowSize.x !== currentWindowSize.x) {\n            if (currentWindowSize.x < 1000) {\n                setCardWidth('23rem')\n                setCardMinHeight('55vh')\n            } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n                // setCardWidth('28rem')\n                setCardWidth('33em')\n                \n            } else {\n                // setCardWidth('28rem')\n                setCardWidth('40rem')\n            }\n            setLastTimeWindowSize(currentWindowSize)\n            // setRenderCardColor(cardColor) // when detecting windows size changed, then re-render the card color\n        }\n        // }, [cardColor, currentWindowSize, currentWindowSize.x, lastTimeWindowSize.x])\n    }, [currentWindowSize, currentWindowSize.x, lastTimeWindowSize.x])\n\n    return (\n        <div>\n            <div className=\"book-todo-root-1\" style={{ minHeight: cardMinHeight }}>\n                <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                    <Card.Header\n                        variant=\"primary\"\n                        className=\"book-todo-card-header\"\n                        style={{ background: renderCardColor }}\n                    >\n                        Add Todo\n                    </Card.Header>\n                    <Card.Body>\n                        <Form.Group controlId=\"formTitle\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">Title</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                placeholder=\"Title\"\n                                onChange={handleTitleChange}\n                                value={title}\n                            />\n                            {showTitleFaildMsg ? <p className=\"field-error-remind\">{titleFailedMsg}</p> : null}\n                        </Form.Group>\n                        <Row>\n                            <Form.Group as={Col} controlId=\"formAuthor\" className=\"align-items-left-2\">\n                                <Form.Label className=\"form-horizontal.control-label\">Author</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Author\"\n                                    onChange={handleAuthorChange}\n                                    value={author}\n                                />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formPrice\" className=\"align-items-left-2\">\n                                <Form.Label className=\"form-horizontal.control-label\">Nationality</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Nationality\"\n                                    onChange={handleNationalityChange}\n                                    value={nationality}\n                                />\n                            </Form.Group>\n                        </Row>\n                        <Form.Group controlId=\"formPrice\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">Price</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                step=\"any\"\n                                placeholder=\"Price\"\n                                onChange={handlePriceChange}\n                                value={price}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formURL\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">URL</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"URL\" onChange={handleURLChange} value={url} />\n                            {showUrlFailedMsg ? <p className=\"field-error-remind\">{urlFailedMsg}</p> : null}\n                        </Form.Group>\n                        <Form.Group controlId=\"formDueDate\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">Due Date</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                placeholder=\"Due Date\"\n                                onChange={handleDueDateChange}\n                                value={dueDate}\n                                timeFormat=\"YYYY-MM-DD\"\n                            />\n                        </Form.Group>\n                        <div>\n                            <Button\n                                className=\"book-todo-btn-2\"\n                                variant=\"primary\"\n                                onClick={handleAddEvent}\n                                disabled={!validateSubmitForm()}\n                            >\n                                Save changes\n                            </Button>\n                            <Button className=\"book-todo-btn-2\" variant=\"danger\" onClick={handleCancelEvent}>\n                                Cancel\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n    )\n}\n","export const orderByDropdownOptions = [\n    {'id': 1, 'value': 'due_date_first'},\n    {'id': 2, 'value': 'will_due_date_first'},\n    {'id': 3, 'value': 'latest_created_first'},\n    {'id': 4, 'value': 'oldest_created_first'},\n    {'id': 5, 'value': 'recent_last_modified_first'},\n    {'id': 6, 'value': 'oldest_last_modified_first'}\n]\n\nexport const exportTodoListOptions = [\n    {'id': 1, 'value': 'csv'}\n]","import { format } from 'date-fns'\n\nexport const convertToLocalDateTime = (convert_datetime) => {\n    return format(new Date(convert_datetime), 'yyyy-MM-dd HH:mm:ss')\n}\n\nexport const convertToLocalDate = (convert_datetime) => {\n    return format(new Date(convert_datetime), 'yyyy_MM_dd')\n}","import { useEffect, useRef } from 'react'\n\nfunction useInterval(callback: () => void, delay: number | null) {\n    const savedCallback = useRef(callback)\n\n    // Remember the latest callback if it changes.\n    useEffect(() => {\n        savedCallback.current = callback\n    }, [callback])\n\n    // Set up the interval.\n    useEffect(() => {\n        // Don't schedule if no delay is specified.\n        if (delay === null) {\n            return\n        }\n\n        const id = setInterval(() => savedCallback.current(), delay)\n\n        return () => clearInterval(id)\n    }, [delay])\n}\n\nexport default useInterval\n","export const getCurrentWindowSize = () => {\n    return {\n        x: window.innerWidth,\n        y: window.innerHeight,\n    }\n}","export const color = [\n    '#28bf28',\n    '#ff0000',\n    '#0000ff',\n    '#1e90ff',\n    '#ffa500',\n    '#800080',\n    '#000080',\n    '#0047ab',\n    '#ff8c00',\n    '#1e90ff',\n    '#9acd32',\n    '#ff1493',\n    '#0000cd',\n    '#fa8072',\n    '#d2b48c',\n    '#9932cc',\n    '#4b0082',\n    '#d19fe8',\n    '#efcc00',\n    '#ff7f50',\n    '#fe5a1d',\n    '#9b111e',\n    '#7f1734',\n    '#ffc40c',\n    '#ff4500',\n    '#ffb347',\n    '#00bfff',\n    '#77b5fe',\n    '#4166f5',\n    '#5b92e5',\n    '#318ce7',\n    '#6495ed',\n    '#191970',\n    '#00008b',\n]\n\n// const randomHeaderColor = Math.floor(Math.random() * headerColor.length)\n\n// Math.floor(Math.random() * range), generate range index of color\nexport const randomColor = () => {\n    return color[Math.floor(Math.random() * color.length)]\n}\n","import { convertToLocalDate } from '../../components/Timer/dateFormat'\n\nexport const exportTodoList = (export_data, filename) => {\n    let file_downloader = require('js-file-download')\n    let full_filename = convertToLocalDate(new Date().toDateString()) + `_${filename}.csv`\n    file_downloader(export_data, full_filename)\n}","import React, { useState, useEffect } from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiCheckBookTodo } from '../../api.js'\n\nexport default function TodoBook(props) {\n    const {\n        setRequestUpdate,\n        id,\n        title,\n        author,\n        price,\n        isRead,\n        nationality,\n        url,\n        dueDate,\n        // daysSinceCreated,\n        lastCompletedDate,\n        dueDays,\n        createdAt,\n        currentWindowSize,\n        cardColor,\n    } = props\n    const [cardWidth, setCardWidth] = useState('33rem')\n    const [cardMinHeight, setCardMinHeight] = useState('45vh')\n    const [lastTimeWindowSize, setLastTimeWindowSize] = useState({\n        x: 0,\n        y: 0,\n    })\n    const [renderCardColor] = useState(cardColor)\n\n    const revokeCompeltedItem = async () => {\n        await apiCheckBookTodo(id, false)\n            .then((res) => {\n                setRequestUpdate(1)\n            })\n            .catch((err) => {\n                // console.error(err)\n                setRequestUpdate(-1)\n            })\n    }\n\n    useEffect(() => {\n        if (lastTimeWindowSize.x !== currentWindowSize.x) {\n            if (currentWindowSize.x < 1000) {\n                // setCardWidth('24rem')\n                setCardWidth('23rem')\n                setCardMinHeight('45vh')\n            } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n                // setCardWidth('28rem')\n                setCardWidth('33rem')\n                setCardMinHeight('42vh')\n            } else if (currentWindowSize.x > 1600 && currentWindowSize.x < 1900){\n                // setCardWidth('28rem')\n                setCardWidth('40rem')\n                setCardMinHeight('35vh')\n            } else {\n                setCardWidth('40rem')\n                setCardMinHeight('33vh')\n            }\n            setLastTimeWindowSize(currentWindowSize)\n            // setRenderCardColor(cardColor) // when detecting windows size changed, then re-render the card color\n        }\n    // }, [cardColor, currentWindowSize, lastTimeWindowSize])\n    }, [currentWindowSize, lastTimeWindowSize])\n\n    return (\n        <div>\n            <div className=\"book-todo-root-1\" style={{ minHeight: cardMinHeight }}>\n                <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                    <Card.Header\n                        variant=\"primary\"\n                        className=\"book-todo-card-header\"\n                        style={{ background: renderCardColor }}\n                    >\n                        {title}\n                    </Card.Header>\n                    <Card.Body>\n                        <Card.Title>\n                        { dueDays > 0 ? (<p>Due date {dueDate} ( Due {dueDays} days )</p>) : <p>Not overdue</p> }\n                        </Card.Title>\n                        <Card.Text as=\"div\" style={{ fontSize: '17px' }}>\n                            Created At: {createdAt}\n                            <br />\n                            {nationality} - {author} - {price} - <a href={url}>Link</a>\n                            <br />\n                            {isRead ? 'Read' : 'Unread'}\n                            <br />\n                        </Card.Text>\n                        <div className=\"book-todo-btn-group-1\">\n                            <Button variant=\"danger\" onClick={revokeCompeltedItem}>\n                                Revoke\n                            </Button>\n                        </div>\n                    </Card.Body>\n                    <Card.Footer style={{ borderColor: renderCardColor }}>\n                        <div style={{ fontWeight: 'bold' }}>Completed date: {lastCompletedDate}</div>\n                    </Card.Footer>\n                </Card>\n            </div>\n        </div>\n    )\n}\n","export const setToken = (access_token, refresh_token) => {\n    localStorage.setItem('access_token', access_token)\n    localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getToken = () => {\n    console.log('access token: ' + localStorage.getItem('access_token'))\n    console.log('refresh token: ' + localStorage.getItem('refresh_token'))\n}\n\nexport const setAccessToken = (access_token) => {\n    localStorage.setItem('access_token', access_token)\n}\n\nexport const getAccessToken = () => {\n    localStorage.getItem('access_token')\n}\n\nexport const setRefreshToken = (refresh_token) => {\n    localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getRefreshToken = () => {\n    localStorage.getItem('refresh_token')\n}\n\nexport const removeToken = () => {\n    localStorage.removeItem('access_token')\n}\n\nexport const checkTokenExists = () => {\n    return localStorage.getItem('access_token') !== null && localStorage.getItem('access_token') !== undefined\n}\n\nexport const removeAllLocalStorage = () => {\n    localStorage.clear()\n    sessionStorage.clear()\n}","import TodoBook from '../views/book/TodoBook'\nimport CompletedList from '../views/book/CompletedList'\nimport UserProfile from '../views/user/UserProfile'\nimport LoginPage from '../views/user/LoginPage'\nimport LogoutPage from '../views/user/LogoutPage'\nimport RegisterPage from '../views/user/RegisterPage'\nimport ApplyResetPasswordPage from '../views/user/ApplyResetPasswordPage'\nimport ResetPasswordPage from '../views/user/ResetPasswordPage'\nimport RegisterValidatePage from '../views/user/RegisterValidatePage'\n\n\nexport const UserRouter = [\n    {\n        path: '/todo/book',\n        name: 'TodoBook',\n        icon: '',\n        component: TodoBook,\n        path_prefix: '/user',\n    },\n    {\n        path: '/completed/book',\n        name: 'CompletedList',\n        icon: '',\n        component: CompletedList,\n        path_prefix: '/user',\n    },\n    {\n        path: '/profile',\n        name: 'UserProfile',\n        icon: '',\n        component: UserProfile,\n        path_prefix: '/user',\n    },\n]\n\nexport const AuthRouter = [\n    {\n        path: '/login',\n        name: 'Login',\n        icon: '',\n        component: LoginPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/logout',\n        name: 'Logout',\n        icon: '',\n        component: LogoutPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/register',\n        name: 'Register',\n        icon: '',\n        component: RegisterPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/confirm-account',\n        name: 'ConfirmAccount',\n        icon: '',\n        component: RegisterValidatePage,\n        path_prefix: '/session'\n    },\n    {\n        path: '/forget-password',\n        name: 'ApplyResetPassword',\n        icon: '',\n        component: ApplyResetPasswordPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/reset-password',\n        name: 'ResetPassword',\n        icon: '',\n        component: ResetPasswordPage,\n        path_prefix: '/session'\n    }\n]\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Button, ButtonGroup, Dropdown, DropdownButton, Container } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiFetchBookTodo, apiExportBookTodo } from '../../api.js'\nimport TodoList from './TodoList'\nimport AddTodo from './AddTodo'\nimport { orderByDropdownOptions, exportTodoListOptions } from './dropdown_options'\nimport { convertToLocalDateTime } from '../../components/Timer/dateFormat'\nimport useInterval from '../../components/Timer/useInterval'\nimport { getCurrentWindowSize } from '../../assets/js/getWindowSize.js'\nimport { randomColor } from '../../components/Cards/color'\nimport { exportTodoList } from '../../assets/js/exportFile.js'\n\n\nexport default function TodoBook(props) {\n    const [currentWindowSize, setCurrentWindowSize] = useState(getCurrentWindowSize())\n    const [todoListData, setTodoListData] = useState([])\n    const [updateData, setUpdateData] = useState(1)\n    const [hide, setHide] = useState(true)\n    const orderBy =\n        sessionStorage.getItem('book_todo_sort') === undefined || sessionStorage.getItem('book_todo_sort') === null\n            ? 'latest_created_first'\n            : sessionStorage.getItem('book_todo_sort')\n    const [exportOption, setExportOption] = useState('csv')\n    const openAddTodoCard = () => {\n        setHide(false)\n        setUpdateData(-1)\n    }\n\n    const setBookTodoSort = (value) => {\n        sessionStorage.setItem('book_todo_sort', value)\n    }\n\n    const handleOrderByChange = (eventKey, event) => {\n        setBookTodoSort(orderByDropdownOptions[eventKey].value)\n        setUpdateData(1)\n    }\n\n    const handleExportCSV = async () => {\n        apiExportBookTodo(false, orderBy, exportOption)\n            .then((res) => {\n                const data = res.data\n                exportTodoList(data, 'book_incomplete_todolist')\n            })\n            .catch((err) => {\n                // console.error(err.response)\n            })\n    }\n\n    const handleExportOptionChange = (eventKey, event) => {\n        setExportOption(exportTodoListOptions[eventKey].value)\n        handleExportCSV()\n    }\n\n    const initPageData = useCallback(() => {\n        const fetchTodoList = async () => {\n            await apiFetchBookTodo(orderBy, false)\n                .then((res) => {\n                    const data = res.data.info\n                    setTodoListData(data)\n                    setUpdateData(0)\n                })\n                .catch((err) => {\n                    setUpdateData(-1)\n                })\n        }\n        if (updateData > 0) {\n            fetchTodoList()\n            setHide(true)\n        } else if (updateData === 0) {\n            setHide(true)\n        }\n    }, [orderBy, updateData])\n\n    useInterval(() => {\n        setCurrentWindowSize(getCurrentWindowSize())\n    }, 1000)\n\n    useEffect(() => {\n        initPageData()\n    }, [initPageData])\n\n    return (\n        <div>\n            <Container fluid>\n                <Button className=\"book-todo-btn-0\" variant=\"primary\" onClick={openAddTodoCard}>\n                    New\n                </Button>\n                <DropdownButton\n                    variant=\"light\"\n                    className=\"book-todo-btn-0\"\n                    as={ButtonGroup}\n                    title=\"Order By\"\n                    id=\"bg-nested-order-by-dropdown\"\n                    onSelect={handleOrderByChange}\n                >\n                    {orderByDropdownOptions.map((options, index) => {\n                        return options.value === orderBy ? (\n                            <Dropdown.Item key={options.id} eventKey={index} active>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        ) : (\n                            <Dropdown.Item key={options.id} eventKey={index}>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        )\n                    })}\n                </DropdownButton>\n                <DropdownButton\n                    variant=\"light\"\n                    className=\"book-todo-btn-0\"\n                    as={ButtonGroup}\n                    title='Export'\n                    id=\"bg-nested-order-by-dropdown\"\n                    onSelect={handleExportOptionChange}\n                >\n                    {exportTodoListOptions.map((options, index) => {\n                        return (\n                            <Dropdown.Item key={options.id} eventKey={index}>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        )\n                        // return options.value === exportOption ? (\n                        //     <Dropdown.Item key={options.id} eventKey={index} active>\n                        //         <span style={{ fontSize: '18px' }}>{options.value}</span>\n                        //     </Dropdown.Item>\n                        // ) : (\n                        //     <Dropdown.Item key={options.id} eventKey={index}>\n                        //         <span style={{ fontSize: '18px' }}>{options.value}</span>\n                        //     </Dropdown.Item>\n                        // )\n                    })}\n                </DropdownButton>\n                {hide ? null : (\n                    <AddTodo\n                        setRequestUpdate={setUpdateData}\n                        currentWindowSize={currentWindowSize}\n                        cardColor={randomColor()}\n                    />\n                )}\n                {todoListData.map((task) => {\n                    return (\n                        <div key={task.id}>\n                            <TodoList\n                                id={task.id}\n                                title={task.title}\n                                author={task.author}\n                                price={task.price}\n                                nationality={task.nationality}\n                                url={task.url}\n                                dueDate={task.due_date}\n                                isRead={task.is_read}\n                                // daysSinceCreated={task.days_since_created}\n                                lastModifyDate={convertToLocalDateTime(task.last_modify_date)}\n                                createdAt={convertToLocalDateTime(task.created_at)}\n                                dueDays={task.due_days}\n                                willDueDays={task.will_due_days}\n                                hideTodoListItem={false}\n                                editEnabled={false}\n                                setRequestUpdate={setUpdateData}\n                                currentWindowSize={currentWindowSize}\n                                cardColor={randomColor()}\n                            />\n                        </div>\n                    )\n                })}\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { ButtonGroup, Dropdown, DropdownButton, Container } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiFetchBookTodo, apiExportBookTodo } from '../../api.js'\nimport CompletedTodoList from './CompletedTodoList'\nimport { orderByDropdownOptions, exportTodoListOptions } from './dropdown_options'\nimport { convertToLocalDateTime } from '../../components/Timer/dateFormat'\nimport useInterval from '../../components/Timer/useInterval'\nimport { getCurrentWindowSize } from '../../assets/js/getWindowSize.js'\nimport { randomColor } from '../../components/Cards/color'\nimport { exportTodoList } from '../../assets/js/exportFile.js'\n\n\nexport default function CompleteList(props) {\n    const [currentWindowSize, setCurrentWindowSize] = useState(getCurrentWindowSize())\n    const [todoListData, setTodoListData] = useState([])\n    const [updateData, setUpdateData] = useState(1)\n    const orderBy =\n        sessionStorage.getItem('book_todo_sort') === undefined || sessionStorage.getItem('book_todo_sort') === null\n            ? 'latest_created_first'\n            : sessionStorage.getItem('book_todo_sort')\n    const [exportOption, setExportOption] = useState('csv')\n    const setBookTodoSort = (value) => {\n        sessionStorage.setItem('book_todo_sort', value)\n    }\n\n    const handleOrderByChange = (eventKey, event) => {\n        setBookTodoSort(orderByDropdownOptions[eventKey].value)\n        setUpdateData(1)\n    }\n\n    const handleExportCSV = async () => {\n        apiExportBookTodo(true, orderBy, exportOption)\n            .then((res) => {\n                const data = res.data\n                exportTodoList(data, 'book_completed_todolist')\n            })\n            .catch((err) => {\n                // console.error(err.response)\n            })\n    }\n\n    const handleExportOptionChange = (eventKey, event) => {\n        setExportOption(exportTodoListOptions[eventKey].value)\n        handleExportCSV()\n    }\n\n    const initPageData = useCallback(() => {\n        const fetchTodoList = async () => {\n            await apiFetchBookTodo(orderBy, true)\n                .then((res) => {\n                    const data = res.data.info\n                    setTodoListData(data)\n                    setUpdateData(-1)\n                })\n                .catch((err) => {\n                    setUpdateData(-1)\n                    // window.location.reload()\n                })\n        }\n        if (updateData > 0) {\n            fetchTodoList()\n        }\n    }, [orderBy, updateData])\n\n    useInterval(() => {\n        setCurrentWindowSize(getCurrentWindowSize())\n    }, 1000)\n\n    useEffect(() => {\n        initPageData()\n    }, [initPageData])\n\n    return (\n        <div>\n            <Container fluid>\n                <DropdownButton\n                    className=\"book-todo-btn-0\"\n                    variant=\"light\"\n                    as={ButtonGroup}\n                    title=\"Order By\"\n                    id=\"bg-nested-order-by-dropdown\"\n                    onSelect={handleOrderByChange}\n                >\n                    {orderByDropdownOptions.map((options, index) => {\n                        return options.value === orderBy ? (\n                            <Dropdown.Item key={options.id} eventKey={index} active>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        ) : (\n                            <Dropdown.Item key={options.id} eventKey={index}>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        )\n                    })}\n                </DropdownButton>\n                <DropdownButton\n                    variant=\"light\"\n                    className=\"book-todo-btn-0\"\n                    as={ButtonGroup}\n                    title=\"Export\"\n                    id=\"bg-nested-order-by-dropdown\"\n                    onSelect={handleExportOptionChange}\n                >\n                    {exportTodoListOptions.map((options, index) => {\n                        return (\n                            <Dropdown.Item key={options.id} eventKey={index}>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        )\n                        // return options.value === exportOption ? (\n                        //     <Dropdown.Item key={options.id} eventKey={index} active>\n                        //         <span style={{ fontSize: '18px' }}>{options.value}</span>\n                        //     </Dropdown.Item>\n                        // ) : (\n                        //     <Dropdown.Item key={options.id} eventKey={index}>\n                        //         <span style={{ fontSize: '18px' }}>{options.value}</span>\n                        //     </Dropdown.Item>\n                        // )\n                    })}\n                </DropdownButton>\n                {todoListData.map((task) => {\n                    return (\n                        <div key={task.id}>\n                            <CompletedTodoList\n                                id={task.id}\n                                title={task.title}\n                                author={task.author}\n                                price={task.price}\n                                nationality={task.nationality}\n                                url={task.url}\n                                dueDate={task.due_date}\n                                isRead={task.is_read}\n                                // daysSinceCreated={task.days_since_created}\n                                lastCompletedDate={convertToLocalDateTime(task.last_modify_date)}\n                                createdAt={convertToLocalDateTime(task.created_at)}\n                                dueDays={task.due_days}\n                                hideTodoListItem={false}\n                                editEnabled={false}\n                                setRequestUpdate={setUpdateData}\n                                currentWindowSize={currentWindowSize}\n                                cardColor={randomColor()}\n                            />\n                        </div>\n                    )\n                })}\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Form, Card, Container } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport useInterval from '../../components/Timer/useInterval'\nimport { getCurrentWindowSize } from '../../assets/js/getWindowSize.js'\n\n\nexport default function UserProfile(props) {\n    const { username, email } = props\n    const [currentWindowSize, setCurrentWindowSize] = useState(getCurrentWindowSize())\n    const [cardWidth, setCardWidth] = useState('28rem')\n\n    useInterval(() => {\n        setCurrentWindowSize(getCurrentWindowSize())\n    }, 1000)\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('22rem')\n        } else if (currentWindowSize.x >= 1000) {\n            setCardWidth('30rem')\n        }\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <div className=\"card-root\">\n                <Container fluid>\n                    <Card\n                        style={{ width: cardWidth, height: '16rem' }}\n                        border=\"dark\"\n                        bg=\"light\"\n                        text=\"black\"\n                        className=\"card-mt-1\"\n                    >\n                        <Form>\n                            <Card.Header>User Profile</Card.Header>\n\n                            <Card.Body>\n                                <Form.Group controlId=\"formUsrname\" className=\"align-items-left-2\">\n                                    <Form.Label className=\"form-horizontal.control-label\">Usrename</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Username\" value={username} disabled />\n                                </Form.Group>\n                                <Form.Group controlId=\"formEmail\" className=\"align-items-left-2\">\n                                    <Form.Label className=\"form-horizontal.control-label\">Email</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} disabled />\n                                </Form.Group>\n                            </Card.Body>\n                        </Form>\n                    </Card>\n                </Container>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container } from 'react-bootstrap'\nimport { setToken } from '../../auth.js'\nimport { apiUserLogin } from '../../api.js'\nimport '../../assets/css/login_page_style.css'\n\nexport default function LoginPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const history = useHistory()\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [displayErrorMessage, setDisplayErrorMessage] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n    const [cardWidth, setCardWidth] = useState('28rem')\n    const [cardBtnSpacing, setCardBtnSpacing] = useState('10.5rem')\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const validateForm = () => {\n        return username.length === 0 || password.length === 0\n    }\n\n    const handleLoginSubmit = (e) => {\n        setErrorMessage('')\n        let data = JSON.stringify({\n            username: username,\n            password: password,\n        })\n        apiUserLogin(data)\n            .then((res) => {\n                let access_token = res.data['access']\n                let refresh_token = res.data['refresh']\n                setToken(access_token, refresh_token)\n                setDisplayErrorMessage(false)\n                history.push('/user/todo/book')\n            })\n            .catch((err) => {\n                // let error_status_code = err.response.status\n                // let error_msg = err.response.data.error\n                // alert(`${error_status_code}, ${error_msg}`)\n                setDisplayErrorMessage(true)\n                setErrorMessage('Login Failed')\n            })\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('23rem')\n            setCardBtnSpacing('4.5rem')\n        } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n            setCardWidth('30rem')\n            setCardBtnSpacing('12.0rem')\n        } else {\n            setCardWidth('30rem')\n            setCardBtnSpacing('11.5rem')\n        }\n        // alert(currentWindowSize.x)\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"light\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>User Login</Card.Header>\n                                <Card.Body>\n                                    <Form.Group controlId=\"formUsrname\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Usrename</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Username\"\n                                            onChange={handleUsernameChange}\n                                            value={username}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formPassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Password\"\n                                            onChange={handlePasswordChange}\n                                            value={password}\n                                        />\n                                    </Form.Group>\n                                    {displayErrorMessage ? (\n                                        <div className=\"field-error-remind\">{errorMessage}</div>\n                                    ) : null}\n                                    <div className=\"btn-mt-1\">\n                                        <Button\n                                            variant=\"primary\"\n                                            block\n                                            onClick={handleLoginSubmit}\n                                            disabled={validateForm()}\n                                        >\n                                            Login\n                                        </Button>\n                                    </div>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <span style={{ textAlign: 'left', marginRight: cardBtnSpacing }}>\n                                        <Link to=\"/session/register\">\n                                            <Button variant=\"success\">Register</Button>\n                                        </Link>\n                                    </span>\n\n                                    <span style={{ textAlign: 'right' }}>\n                                        <Link to=\"/session/forget-password\">Forget your password?</Link>\n                                    </span>\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { checkTokenExists, removeAllLocalStorage } from '../../auth'\nimport { apiLogoutRevokeToken } from '../../api.js'\n\nexport default function LogoutPage() {\n    const history = useHistory()\n\n    const handleUserLogout = useCallback(() => {\n        const revokeToken = async () => {\n            let data = {\n                refresh: localStorage.getItem('refresh_token'),\n            }\n            apiLogoutRevokeToken(data)\n                .then((res) => {\n                    removeAllLocalStorage()\n                    if (!checkTokenExists() && res.data['allow_logout'] === true) {\n                        history.push('/session/login')\n                    }\n                })\n                .catch((err) => {\n                    // console.error(err)\n                    removeAllLocalStorage()\n                    history.push('/session/login')\n                })\n        }\n        revokeToken()\n    }, [history])\n\n    useEffect(() => {\n        handleUserLogout()\n    }, [handleUserLogout])\n\n    return <div></div>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container, Alert } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport '../../assets/css/register_page_style.css'\nimport { apiRegisterUser, apiReissueRegister } from '../../api.js'\n\nexport default function RegisterPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [rePassword, setRePassword] = useState('')\n    const [showRegisterSuccess, setShowRegisterSuccess] = useState(false)\n    const [registerMsg, setRegisterMsg] = useState(false)\n    const [usernameFieldAlert, setUsernameFieldAlert] = useState('')\n    const [emailFieldAlert, setEmailFieldAlert] = useState('')\n    const [displayReissueMsg, setDisplayReissueMsg] = useState(false)\n    const [reissueMsg, setReissueMsg] = useState('')\n    const [cardWidth, setCardWidth] = useState('28rem')\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleRePasswordChange = (e) => {\n        setRePassword(e.target.value)\n    }\n\n    const checkSubmitValues = () => {\n        return (\n            username.length === 0 ||\n            email.length === 0 ||\n            password.length === 0 ||\n            rePassword.length === 0 ||\n            password !== rePassword\n        )\n    }\n\n    const clearAlertMessage = () => {\n        setUsernameFieldAlert('')\n        setEmailFieldAlert('')\n    }\n\n    const handleRegisterSubmit = () => {\n        clearAlertMessage()\n        if (username === 'admin') {\n            setUsernameFieldAlert(`The username 'admin' disable`)\n        } else {\n            let data = {\n                username: username,\n                email: email,\n                password: password,\n            }\n            apiRegisterUser(data)\n                .then((res) => {\n                    let data = res.data\n                    if (data['is_registered'] === true) {\n                        setShowRegisterSuccess(true)\n                        setRegisterMsg(data['message'])\n                    }\n                })\n                .catch((err) => {\n                    // console.error(err.response.data)\n                    setShowRegisterSuccess(false)\n                    let detail = err.response.data['error']\n                    if (detail['is_username_registered'] === true && detail['is_email_registered'] === true) {\n                        setUsernameFieldAlert('The username has been use')\n                        setEmailFieldAlert('The email has been registerd')\n                    } else if (detail['is_username_registered'] === true || detail['is_email_registered'] === true) {\n                        detail['is_username_registered'] === true\n                            ? setUsernameFieldAlert('The username has been use')\n                            : setEmailFieldAlert('The email has been registerd')\n                    }\n                })\n        }\n    }\n\n    const clearReissueMessage = () => {\n        setReissueMsg('')\n        setDisplayReissueMsg(false)\n    }\n\n    const handleReissueRequest = () => {\n        clearReissueMessage()\n        let data = {\n            username: username,\n            email: email,\n        }\n        apiReissueRegister(data)\n            .then((res) => {\n                let data = res.data\n                if (res.status === 200 && data['is_reissue'] === true) {\n                    setReissueMsg(data['message'])\n                    setDisplayReissueMsg(true)\n                    setShowRegisterSuccess(false)\n                }\n            })\n            .catch((err) => {\n                // console.log(err)\n                clearReissueMessage()\n            })\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('23rem')\n        } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n            setCardWidth('28rem')\n        } else {\n            setCardWidth('31rem')\n        }\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container fluid>\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"black\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>User Register</Card.Header>\n\n                                <Card.Body>\n                                    {showRegisterSuccess ? (\n                                        <div>\n                                            <Alert variant=\"success\">\n                                                <Alert.Heading>Register Successfully</Alert.Heading>\n                                                <p>{registerMsg}</p>\n                                                <hr />\n                                                <div className=\"btn-mt-1\">\n                                                    <Button variant=\"primary\" onClick={handleReissueRequest}>\n                                                        未收到認證信?\n                                                    </Button>\n                                                </div>\n                                            </Alert>\n                                        </div>\n                                    ) : null}\n                                    {displayReissueMsg ? (\n                                        <div>\n                                            <Alert variant=\"success\">\n                                                <Alert.Heading>Reissue Successfully</Alert.Heading>\n                                                <p>{reissueMsg}</p>\n                                            </Alert>\n                                        </div>\n                                    ) : null}\n                                    <Form.Group controlId=\"formUsrname\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Usrename</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Username\"\n                                            onChange={handleUsernameChange}\n                                            value={username}\n                                        />\n                                        <p className=\"field-alert\">{usernameFieldAlert}</p>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formEmail\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Email</Form.Label>\n                                        <Form.Control\n                                            type=\"email\"\n                                            placeholder=\"Email\"\n                                            onChange={handleEmailChange}\n                                            value={email}\n                                        />\n                                        <p className=\"field-alert\">{emailFieldAlert}</p>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formPassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Password\"\n                                            onChange={handlePasswordChange}\n                                            value={password}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formRePassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">\n                                            Re-enter Password\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Re-Enter Password\"\n                                            onChange={handleRePasswordChange}\n                                            value={rePassword}\n                                        />\n                                    </Form.Group>\n                                    <Button\n                                        variant=\"primary\"\n                                        block\n                                        onClick={handleRegisterSubmit}\n                                        disabled={checkSubmitValues()}\n                                    >\n                                        Sign up\n                                    </Button>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <div style={{ textAlign: 'center' }}>\n                                        Already have account? <Link to=\"/session/login\">Sign in</Link>\n                                    </div>\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Button, Row, Container, Alert } from 'react-bootstrap'\nimport { apiRegisterValidate } from '../../api.js'\nimport useInterval from '../../components/Timer/useInterval'\nimport '../../assets/css/register_page_style.css'\n\nexport default function RegisterValidatePage() {\n    const history = useHistory()\n    const { search } = useLocation()\n    const searchParams = new URLSearchParams(search)\n    const token = searchParams.get('token')\n    const [showJumpLoginModal, setJumpLoginModal] = useState(false)\n    const [delay] = useState(1000)\n    const [countdown, setCountdown] = useState(5)\n    const [validateFailure, setValidateFailure] = useState(false)\n    const [failureAlertMsg, setFailureAlertMsg] = useState('')\n\n    useInterval(\n        () => {\n            countdown === 0 ? history.push('/session/login') : setCountdown(countdown - 1)\n        },\n        showJumpLoginModal ? delay : null\n    )\n\n    const handleLoginRedirect = () => {\n        history.push('/session/login')\n    }\n\n    const checkToken = useCallback(() => {\n        setFailureAlertMsg('')\n        const validateRegisterToken = async () => {\n            let data = {\n                token: token,\n            }\n            apiRegisterValidate(data)\n                .then((res) => {\n                    if (res.data['is_account_validated'] === true && res.status === 200) {\n                        setJumpLoginModal(true)\n                        setValidateFailure(false)\n                    } else {\n                        setJumpLoginModal(false)\n                        setValidateFailure(true)\n                    }\n                })\n                .catch((err) => {\n                    setJumpLoginModal(false)\n                    setValidateFailure(true)\n                    setFailureAlertMsg(err.response.data.error)\n                })\n        }\n        validateRegisterToken()\n    }, [token])\n\n    useEffect(() => {\n        checkToken()\n    }, [checkToken])\n\n    return (\n        <div>\n            <Container fluid>\n                <Row>\n                    {showJumpLoginModal ? (\n                        <div>\n                            <Alert show={true} variant=\"success\">\n                                <Alert.Heading>Register Account Activated Successfully</Alert.Heading>\n                                <div className=\"alert-text-1\">\n                                    <p>Will be jump to sign page: {countdown}</p>\n                                </div>\n                                <hr />\n                                <div className=\"d-flex justify-content-end\">\n                                    <Button variant=\"primary\" onClick={handleLoginRedirect}>\n                                        Sign in now\n                                    </Button>\n                                </div>\n                            </Alert>\n                        </div>\n                    ) : null}\n                </Row>\n                <Row>\n                    {validateFailure ? (\n                        <Alert variant=\"danger\">\n                            <Alert.Heading>Register Account Activate Failed</Alert.Heading>\n                            <div className=\"alert-text-1\">\n                                <p>{failureAlertMsg}</p>\n                            </div>\n                            <hr />\n                            <div className=\"d-flex justify-content-end\">\n                                <Button variant=\"danger\" onClick={handleLoginRedirect}>\n                                    Return to sign in\n                                </Button>\n                            </div>\n                        </Alert>\n                    ) : null}\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container, Alert } from 'react-bootstrap'\nimport { apiApplyResetPassword } from '../../api.js'\n\nexport default function ApplyResetPasswordPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const [email, setEmail] = useState('')\n    const [applySuccess, setApplySuccess] = useState(false)\n    const [applyFailure, setApplyFailure] = useState(false)\n    const [cardWidth, setCardWidth] = useState('28rem')\n    const [cardBtnSpacing, setCardBtnSpacing] = useState('10.5rem')\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const validateForm = () => {\n        return email.length === 0\n    }\n\n    const handleApplySubmit = () => {\n        let data = {\n            email: email,\n        }\n        apiApplyResetPassword(data)\n            .then((res) => {\n                if (res.data['apply_reset_success']) {\n                    setApplyFailure(false)\n                    setApplySuccess(true)\n                }\n            })\n            .catch((err) => {\n                // console.error(err)\n                setApplyFailure(true)\n                setApplySuccess(false)\n            })\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('23rem')\n            setCardBtnSpacing('4.2rem')\n        } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n            setCardWidth('27rem')\n            setCardBtnSpacing('8.5rem')\n        } else if (currentWindowSize.x > 1600 && currentWindowSize.x < 1900) {\n            setCardWidth('30rem')\n            setCardBtnSpacing('10.6rem')\n        } else {\n            setCardWidth('30rem')\n            setCardBtnSpacing('11.2rem')\n        }\n        // alert(currentWindowSize.x)\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"light\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>Apply Reset Password</Card.Header>\n                                <Card.Body>\n                                    {applySuccess ? (\n                                        <Alert variant=\"success\">\n                                            <Alert.Heading>Apply Success</Alert.Heading>\n                                            <p className=\"mb-0\">\n                                                Please go to your mailbox to receive the reset password email\n                                            </p>\n                                        </Alert>\n                                    ) : null}\n                                    {applyFailure ? (\n                                        <Alert variant=\"danger\">\n                                            <Alert.Heading>Apply Failed</Alert.Heading>\n                                            <p className=\"mb-0\">\n                                                Please check field whether or enter duplicate username or email\n                                            </p>\n                                        </Alert>\n                                    ) : null}\n                                    <Form.Group controlId=\"formEmail\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Email</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Email\"\n                                            onChange={handleEmailChange}\n                                            value={email}\n                                        />\n                                    </Form.Group>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <span style={{ textAlign: 'left', marginRight: cardBtnSpacing }}>\n                                        <Button variant=\"primary\" onClick={handleApplySubmit} disabled={validateForm()}>\n                                            Apply Reset Password\n                                        </Button>\n                                    </span>\n                                    <span style={{ textAlign: 'right' }}>\n                                        <Link to=\"/session/login\">\n                                            <Button variant=\"danger\">Return</Button>\n                                        </Link>\n                                    </span>\n                                    {/* <Row>\n                                        <Col md={9}>\n                                            <Button\n                                                variant=\"primary\"\n                                                onClick={handleApplySubmit}\n                                                disabled={validateForm()}\n                                            >\n                                                Apply Reset Password\n                                            </Button>\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to=\"/session/login\">\n                                                <Button variant=\"danger\">Return</Button>\n                                            </Link>\n                                        </Col>\n                                    </Row> */}\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container, Alert, Modal } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiResetPassword } from '../../api.js'\nimport useInterval from '../../components/Timer/useInterval'\n\nexport default function RegisterPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const history = useHistory()\n    const { search } = useLocation()\n    const searchParams = new URLSearchParams(search)\n    const token = searchParams.get('token')\n    const [newPassword, setNewPassword] = useState('')\n    const [reNewPassword, setReNewPassword] = useState('')\n    const [resetFailure, setResetFailure] = useState(false)\n    const [showJumpLoginModal, setJumpLoginModal] = useState(false)\n    const [delay] = useState(1000)\n    const [countdown, setCountdown] = useState(5)\n    const [errorMsg, setErrorMsg] = useState('')\n    const [cardWidth, setCardWidth] = useState('28rem')\n\n    const handlePasswordChange = (e) => {\n        setNewPassword(e.target.value)\n        // console.log('password changed: ' + e.target.value)\n    }\n\n    const handleRePasswordChange = (e) => {\n        setReNewPassword(e.target.value)\n        // console.log('re-password changed: ' + e.target.value)\n    }\n\n    const checkSubmitValues = () => {\n        return newPassword.length === 0 || reNewPassword.length === 0 || newPassword !== reNewPassword\n    }\n\n    useInterval(\n        () => {\n            countdown === 0 ? history.push('/session/login') : setCountdown(countdown - 1)\n        },\n        showJumpLoginModal ? delay : null\n    )\n\n    const handleResetPasswordSubmit = () => {\n        let data = {\n            token: token,\n            new_password: newPassword,\n        }\n        apiResetPassword(data)\n            .then((res) => {\n                if (res.status === 200 && res.data['is_password_changed']) {\n                    setResetFailure(false)\n                    setJumpLoginModal(true)\n                } else {\n                    setResetFailure(true)\n                    setJumpLoginModal(false)\n                }\n            })\n            .catch((err) => {\n                setResetFailure(true)\n                setJumpLoginModal(false)\n                setErrorMsg(err.response.data.error)\n            })\n    }\n\n    const handleLoginRedirect = () => {\n        history.push('/session/login')\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('22rem')\n        } else if (currentWindowSize.x >= 1000) {\n            setCardWidth('30rem')\n        }\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container fluid>\n                {showJumpLoginModal ? (\n                    <div>\n                        <Modal show={showJumpLoginModal} backdrop=\"static\" keyboard={false}>\n                            <Modal.Header>\n                                <Modal.Title>Reset Password Successfully</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Will be jump to sign page: {countdown}</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"primary\" onClick={handleLoginRedirect}>\n                                    Sign in now\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </div>\n                ) : null}\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"black\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>Reset Password</Card.Header>\n                                <Card.Body>\n                                    {resetFailure ? (\n                                        <Alert variant=\"danger\">\n                                            <Alert.Heading>Reset Password Failed</Alert.Heading>\n                                            <p className=\"mb-0\">{errorMsg}</p>\n                                        </Alert>\n                                    ) : null}\n                                    <Form.Group controlId=\"formPassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">New Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"New Password\"\n                                            onChange={handlePasswordChange}\n                                            value={newPassword}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formRePassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">\n                                            Re-enter New Password\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Re-Enter New Password\"\n                                            onChange={handleRePasswordChange}\n                                            value={reNewPassword}\n                                        />\n                                    </Form.Group>\n                                </Card.Body>\n\n                                <Card.Footer>\n                                    <div className=\"link-mt-1\">\n                                        <Button\n                                            variant=\"primary\"\n                                            block\n                                            onClick={handleResetPasswordSubmit}\n                                            disabled={checkSubmitValues()}\n                                        >\n                                            Reset Password\n                                        </Button>\n                                    </div>\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\n// import { UserRouter, AuthRouter } from '../../route/routes.js'\nimport { UserRouter } from '../../route/routes.js'\n\nexport default function UserHeader(props) {\n    const location = useLocation()\n    // const allRoutes = UserRouter.concat(AuthRouter)\n    const getBrandText = () => {\n        for (let i = 0; i < UserRouter.length; i++) {\n            if (location.pathname.indexOf(UserRouter[i].path_prefix + UserRouter[i].path) !== -1) {\n                return UserRouter[i].name\n            }\n        }\n    }\n    const username = props.username === undefined ? null : props.username\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n            <Container fluid>\n                <Navbar.Brand>\n                    {getBrandText()}\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"Guide\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item eventKey=\"5\" as={Link} to=\"/user/todo/book\">\n                                BookTodo\n                            </NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item eventKey=\"6\" as={Link} to=\"/user/completed/book\">\n                                CompelteTodo\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item eventKey=\"5\" as={Link} to=\"/user/profile\">\n                                Profile\n                            </NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            {/* <NavDropdown.Item eventKey=\"6\" as={Link} to=\"/session/logout\"> */}\n                            <NavDropdown.Item eventKey=\"6\" as={Link} to=\"/session/logout\">\n                                Logout\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav.Item className=\"ml-auto\">\n                        <Navbar.Text style={{ color: 'white', fontSize: '18px'}}>\n                            Signed in as: <span style= {{ fontWeight: 'bold' }}>{username}</span>\n                        </Navbar.Text>\n                    </Nav.Item>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n","import React, { useEffect, useCallback, useState, useRef } from 'react'\nimport { Route, Redirect, useHistory } from 'react-router-dom'\nimport UserHeader from '../components/Navbars/UserHeader'\n// import UserFooter from '../components/Footer/UserFooter'\nimport { UserRouter } from './routes'\nimport { apiRefreshToken, apiUpdateUserProfile, apiTokenExpireCheck, apiLogoutRevokeToken } from '../api.js'\nimport '../assets/css/protected_page_style.css'\nimport useInterval from '../components/Timer/useInterval'\nimport { checkTokenExists, removeAllLocalStorage } from '../auth'\n\nexport default function ProtectedRoutes(props) {\n    const history = useHistory()\n    const mainPanel = useRef(null)\n    const [allowRender, setAllowRender] = useState(false)\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [checkTokenExpireTime, setCheckTokenExpireTime] = useState(60000) // default check token epxire time 1 minutes\n\n    const getRoutes = (routes) => {\n        let route = null\n        let index = 0\n        for (let prop of routes) {\n            if (prop.path_prefix === '/user' && history.location.pathname === prop.path_prefix + prop.path) {\n                if (prop.path === '/profile') {\n                    route = (\n                    <Route\n                        path={prop.path_prefix + prop.path}\n                        render={(props) => <prop.component username={username} email={email} />}\n                        key={index}\n                    />\n                )\n                } else {\n                    route = (\n                    <Route\n                        path={prop.path_prefix + prop.path}\n                        render={(props) => <prop.component {...props} />}\n                        key={index}\n                    />\n                )\n                }\n                // console.log('current route: ' + history.location.pathname)\n                break\n            }\n            index++\n        }\n        index = 0\n        return route\n    }\n\n    const checkUserAuth = useCallback(() => {\n        // console.log('check user auth')\n        const fetchUserProfile = async () => {\n            if (username.length < 1 || username === '' || email.length < 1 || email === '') {\n                // console.log('fetch update user profile')\n                await apiUpdateUserProfile()\n                    .then((res) => {\n                        let res_data = res.data.info\n                        setUsername(res_data['user'])\n                        setEmail(res_data['email'])\n                        // console.log('get user profile')\n                    })\n                    .catch((err) => {\n                        // console.error('error updating user profile: ' + err)\n                    })\n            }\n        }\n        const refreshTokenRequest = async () => {\n            let data = {\n                refresh: localStorage.getItem('refresh_token'),\n            }\n            await apiRefreshToken(data)\n                .then((res) => {\n                    localStorage.setItem('access_token', res.data['access'])\n                    // console.log('token expired time: ' + res.data['exp'])\n                    setAllowRender(true)\n                    fetchUserProfile()\n                })\n                .catch((err) => {\n                    setAllowRender(false)\n                    let data = {\n                        refresh: localStorage.getItem('refresh_token'),\n                    }\n                    apiLogoutRevokeToken(data)\n                        .then((res) => {\n                            removeAllLocalStorage()\n                            if (!checkTokenExists() && res.data['allow_logout'] === true) {\n                                history.push('/session/login')\n                            }\n                        })\n                        .catch((err) => {\n                            // console.error(err)\n                            removeAllLocalStorage()\n                            history.push('/session/login')\n                        })\n                })\n        }\n        const fetchUserAuth = async () => {\n            await apiTokenExpireCheck()\n                .then((res) => {\n                    let data = res.data\n                    let token_time_left = data['token_time_left']\n                    if (token_time_left > 60) {\n                        setCheckTokenExpireTime(60000)\n                    } else if (token_time_left === 60) {\n                        setCheckTokenExpireTime(20000)\n                    } else if (token_time_left >= 30 && token_time_left <= 60) {\n                        setCheckTokenExpireTime(10000)\n                    } else if (token_time_left <= 30) {\n                        refreshTokenRequest()\n                    }\n                    setAllowRender(true)\n                    fetchUserProfile()\n                })\n                .catch((err) => {\n                    refreshTokenRequest()\n                })\n        }\n        fetchUserAuth()\n    }, [email, history, username])\n\n    const renderRoute = getRoutes(UserRouter)\n\n    useInterval(() => {\n        // console.log('will be check token expire')\n        checkUserAuth()\n        // console.log('token expire check has been done')\n        // }, 900000)\n    }, checkTokenExpireTime)\n\n    useEffect(() => {\n        checkUserAuth()\n    }, [checkUserAuth])\n\n    return (\n        <div>\n            <div className=\"wrapper\">\n                <div className=\"mainPanel\" ref={mainPanel}>\n                    {allowRender ? (\n                        renderRoute === null ? (\n                            <Redirect to=\"/404\" />\n                        ) : (\n                            <div>\n                                <UserHeader username={username} />\n                                {renderRoute}\n                                {/* <UserFooter /> */}\n                            </div>\n                        )\n                    ) : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n// import { checkTokenExists } from '../auth'\nimport { Route, Redirect, useHistory } from 'react-router-dom'\nimport { AuthRouter } from './routes'\nimport '../assets/css/login_page_style.css'\nimport { getCurrentWindowSize } from '../assets/js/getWindowSize.js'\n\n\nexport default function AuthRoutes() {\n    const history = useHistory()\n\n    const getRoutes = (routes) => {\n        let route = null\n        let index = 0\n        for (let prop of routes) {\n            if (prop.path_prefix === '/session' && (history.location.pathname === prop.path_prefix + prop.path)) {\n                route = (\n                    <Route\n                        path={prop.path_prefix + prop.path}\n                        render={(props) => <prop.component {...props} currentWindowSize={getCurrentWindowSize()} />}\n                        key={index}\n                    />\n                )\n                break\n            }\n            index++\n        }\n        index = 0\n        return route\n    }\n\n    const renderRoute = () => {\n        let route = getRoutes(AuthRouter)\n        if (route === null) {\n            return <Redirect to=\"/404\" />\n        }\n        return <div>{route}</div>\n    }\n\n    return <div className=\"root\">{renderRoute()}</div>\n}\n","import React from 'react'\n\nexport const NotMatch404 = () => {\n    return (\n        <div>\n            <h1>404 Error Not Found Match Page.</h1>\n        </div>\n    )\n}\n","import React, { useEffect, useCallback } from 'react'\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom'\nimport ProtectedRoutes from './route/protected_route'\nimport AuthRoutes from './route/auth_route'\nimport { NotMatch404 } from './views/error/NotMatch404'\nimport { checkTokenExists } from './auth.js'\n\nexport default function App() {\n    const history = useHistory()\n    const { search } = useLocation()\n\n    const checkUserAuth = useCallback(() => {\n        let filter_prefix = String(history.location.pathname.split('/', 2))\n        let prefix = filter_prefix.replace(',', '/')\n        let current_access_path = history.location.pathname + search\n        if (prefix === '/session' && search.length > 0) {\n            history.push(current_access_path)\n        } else if (prefix === '/session' && search.length < 1) {\n            current_access_path === '/' ? history.push('/session/login') : history.push(current_access_path)\n        } else {\n            const fetchUserAuth = async () => {\n                if (!checkTokenExists()) {\n                    history.push('/session/login')\n                } else {\n                    current_access_path === '/' ? history.push('/user/todo/book') : history.push(current_access_path)\n                }\n            }\n            fetchUserAuth()\n        }\n    }, [history, search])\n\n    useEffect(() => {\n        checkUserAuth()\n    }, [checkUserAuth])\n\n    return (\n        <Switch>\n            <Route path=\"/404\" component={NotMatch404} />\n            <Route path=\"/session\" render={(props) => <AuthRoutes {...props} />} />\n            <Route exect path=\"/user\" render={(props) => <ProtectedRoutes {...props} />} />\n        </Switch>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}