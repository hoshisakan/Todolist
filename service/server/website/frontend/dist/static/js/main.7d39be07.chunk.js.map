{"version":3,"sources":["api.js","views/book/TodoList.js","views/book/AddTodo.js","views/book/dropdown_options.js","components/Timer/dateFormat.js","components/Timer/useInterval.js","assets/js/getWindowSize.js","components/Cards/color.js","views/book/CompletedTodoList.js","auth.js","route/routes.js","views/book/TodoBook.js","views/book/CompletedList.js","views/user/UserProfile.js","views/user/LoginPage.js","views/user/LogoutPage.js","views/user/RegisterPage.js","views/user/RegisterValidatePage.js","views/user/ApplyResetPasswordPage.js","views/user/ResetPasswordPage.js","components/Navbars/UserHeader.js","route/protected_route.js","route/auth_route.js","views/error/NotMatch404.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["apiAccountRequest","axios","create","baseURL","headers","apiBookTodoRequest","apiRefreshToken","data","post","apiUpdateUserProfile","get","localStorage","getItem","apiLogoutRevokeToken","apiRegisterValidate","apiFetchBookTodo","order_by","is_checked","params","apiAddBookTodo","apiEditBookTodo","id","put","apiDeleteBookTodo","delete","apiCheckBookTodo","patch","TodoBook","props","setRequestUpdate","title","author","price","isRead","nationality","url","dueDate","lastModifyDate","createdAt","dueDays","willDueDays","currentWindowSize","cardColor","useState","updateId","setId","updateTitle","setTitle","updateAuthor","setAuthor","updatePrice","setPrice","updateNationality","setNationality","updateUrl","setURL","updateDueDate","setDueDate","editEnabled","setEditEnabled","displayDeleteConfirm","setDisplayDeleteConfirm","requestEditId","setRequestEditId","displayEditForm","setDisplayEditForm","showTitleFaildMsg","setShowTitleFaildMsg","showUrlFailedMsg","setShowUrlFailedMsg","titleFailedMsg","setTitleFailedMsg","urlFailedMsg","setUrlFailedMsg","cardWidth","setCardWidth","cardMinHeight","setCardMinHeight","x","y","lastTimeWindowSize","setLastTimeWindowSize","renderCardColor","checkUpdateAllow","setCheckUpdateAllow","handleUpdateEvent","a","due_date","then","res","catch","err","error_status_code","response","status","error_msg","error","handleDeleteItemEvent","displayDeleteItemConfirm","checkTodoCard","checkPropsUpdate","useCallback","updateWindowSize","useEffect","Modal","show","backdrop","keyboard","Header","style","background","color","Title","Body","fontWeight","Footer","borderColor","Button","variant","onClick","className","Card","width","Form","Group","controlId","Label","Control","as","placeholder","onChange","e","target","value","Row","Col","type","step","timeFormat","minHeight","Text","fontSize","href","AddTodo","clearForm","addTodoRequest","console","disabled","length","orderByDropdownOptions","convertToLocalDate","convert_datetime","format","Date","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","getCurrentWindowSize","window","innerWidth","innerHeight","randomColor","Math","floor","random","revokeCompeltedItem","checkTokenExists","undefined","removeAllLocalStorage","clear","sessionStorage","UserRouter","path","name","icon","component","setCurrentWindowSize","todoListData","setTodoListData","updateData","setUpdateData","hide","setHide","orderBy","initPageData","info","fetchTodoList","Container","fluid","DropdownButton","ButtonGroup","onSelect","eventKey","event","setItem","map","options","index","Dropdown","Item","active","task","is_read","last_modify_date","created_at","due_days","will_due_days","hideTodoListItem","path_prefix","email","setEmail","username","setUsername","updateUserProfile","res_data","fetchUserProfile","height","border","bg","text","AuthRouter","history","useHistory","password","setPassword","displayErrorMessage","setDisplayErrorMessage","errorMessage","setErrorMessage","cardBtnSpacing","setCardBtnSpacing","md","block","apiUserLogin","JSON","stringify","access_token","refresh_token","setToken","push","textAlign","marginRight","to","handleUserLogout","refresh","revokeToken","rePassword","setRePassword","showRegisterSuccess","setShowRegisterSuccess","registerMsg","setRegisterMsg","usernameFieldAlert","setUsernameFieldAlert","emailFieldAlert","setEmailFieldAlert","displayReissueMsg","setDisplayReissueMsg","reissueMsg","setReissueMsg","clearReissueMessage","Alert","Heading","apiReissueRegister","apiRegisterUser","detail","search","useLocation","token","URLSearchParams","showJumpLoginModal","setJumpLoginModal","countdown","setCountdown","validateFailure","setValidateFailure","failureAlertMsg","setFailureAlertMsg","handleLoginRedirect","checkToken","validateRegisterToken","applySuccess","setApplySuccess","applyFailure","setApplyFailure","apiApplyResetPassword","newPassword","setNewPassword","reNewPassword","setReNewPassword","resetFailure","setResetFailure","errorMsg","setErrorMsg","apiResetPassword","new_password","UserHeader","location","Navbar","expand","collapseOnSelect","Brand","i","pathname","indexOf","getBrandText","Toggle","Collapse","Nav","NavDropdown","Link","Divider","ProtectedRoutes","mainPanel","allowRender","setAllowRender","checkTokenExpireTime","setCheckTokenExpireTime","checkUserAuth","refreshTokenRequest","token_time_left","fetchUserAuth","renderRoute","route","routes","prop","render","getRoutes","performance","navigation","requestRenderRoute","ref","AuthRoutes","NotMatch404","App","prefix","String","split","replace","current_access_path","exect","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7d39be07.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst apiAccountRequest = axios.create({\n    baseURL: 'http://192.168.1.112:9001/api/users',\n    // baseURL: 'http://192.168.1.112:9028/api/users',\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    }\n})\n\nconst apiBookTodoRequest = axios.create({\n    baseURL: 'http://192.168.1.112:9001/api/book',\n    // baseURL: 'http://192.168.1.112:9028/api/book',\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    }\n})\n\nexport const apiUserLogin = (data) =>\n    apiAccountRequest.post('/sign-in', data)\n\nexport const apiRefreshToken = (data) =>\n    apiAccountRequest.post('/token-refresh', data)\n\n// export const apiRefreshToken = (data) =>\n//     apiAccountRequest.post('/token-refresh', data, {\n//         headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n//     })\n\n// For use headers send access token, such as 'Authorization Bearer token'\n// export const apiUpdateUserProfile = () =>\n//     apiAccountRequest.post(\n//         '/profile',\n//         {},\n//         {\n//             headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n//         }\n//     )\n\nexport const apiUpdateUserProfile = () =>\n    apiAccountRequest.get(\n        '/profile',\n        {\n            headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n        }\n    )\n\nexport const apiLogoutRevokeToken = (data) =>\n    apiAccountRequest.post('/logout', data)\n\nexport const apiRegisterUser = (data) =>\n    apiAccountRequest.post('', data)\n\nexport const apiApplyResetPassword = (data) =>\n    apiAccountRequest.post('/forget-password', data)\n\nexport const apiResetPassword = (data) =>\n    apiAccountRequest.post('/reset-password', data)\n\nexport const apiRegisterValidate = (data) =>\n    apiAccountRequest.post('/validate-account', data)\n\nexport const apiReissueRegister = (data) =>\n    apiAccountRequest.post('/reissue-activate', data)\n\n// export const apiTokenExpireCheck = () =>\n//     apiAccountRequest.get(\n//         '/token-expire-check',\n//         {\n//             headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n//         }\n//     )\n\nexport const apiTokenExpireCheck = () =>\n    apiAccountRequest.post(\n        '/token-expire-check',\n        {\n            \"token\": localStorage.getItem('access_token')\n        }\n    )\n\n// GET Method send params\nexport const apiFetchBookTodo = (order_by, is_checked) =>\n    apiBookTodoRequest.get('', {\n        params: {\n            order_by: order_by,\n            is_checked: is_checked\n        },\n        headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n    })\n\nexport const apiAddBookTodo = (data) =>\n    apiBookTodoRequest.post('', data, {\n        headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n    })\n\nexport const apiEditBookTodo = (id, data) =>\n    apiBookTodoRequest.put(`/${id}`, data, {\n        headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n    })\n\nexport const apiDeleteBookTodo = (id) =>\n    apiBookTodoRequest.delete(`/${id}`, {\n        headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n    })\n\n\nexport const apiCheckBookTodo = (id, is_checked) =>\n    apiBookTodoRequest.patch(`/${id}`,{\n        \"is_read\": is_checked\n    }, {\n        headers: {'Authorization': `Bearer ${localStorage.getItem('access_token')}`}\n    })","import React, { useState, useCallback, useEffect } from 'react'\nimport { Button, Card, Modal, Form, Row, Col } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiDeleteBookTodo, apiEditBookTodo, apiCheckBookTodo } from '../../api.js'\n\nexport default function TodoBook(props) {\n    const {\n        setRequestUpdate,\n        id,\n        title,\n        author,\n        price,\n        isRead,\n        nationality,\n        url,\n        dueDate,\n        // daysSinceCreated,\n        lastModifyDate,\n        createdAt,\n        dueDays,\n        willDueDays,\n        currentWindowSize,\n        cardColor\n    } = props\n    const [updateId, setId] = useState(id)\n    const [updateTitle, setTitle] = useState(title)\n    const [updateAuthor, setAuthor] = useState(author)\n    const [updatePrice, setPrice] = useState(price)\n    const [updateNationality, setNationality] = useState(nationality)\n    const [updateUrl, setURL] = useState(url)\n    const [updateDueDate, setDueDate] = useState(dueDate)\n    const [editEnabled, setEditEnabled] = useState(false)\n    const [displayDeleteConfirm, setDisplayDeleteConfirm] = useState(false)\n    const [requestEditId, setRequestEditId] = useState(0)\n    const [displayEditForm, setDisplayEditForm] = useState(false)\n    const [showTitleFaildMsg, setShowTitleFaildMsg] = useState(false)\n    const [showUrlFailedMsg, setShowUrlFailedMsg] = useState(false)\n    const [titleFailedMsg, setTitleFailedMsg] = useState('')\n    const [urlFailedMsg, setUrlFailedMsg] = useState('')\n    const [cardWidth, setCardWidth] = useState('33rem')\n    const [cardMinHeight, setCardMinHeight] = useState('45vh')\n    const [lastTimeWindowSize, setLastTimeWindowSize] = useState({\n        x: 0,\n        y: 0,\n    })\n    const [renderCardColor] = useState(cardColor)\n    const [checkUpdateAllow, setCheckUpdateAllow] = useState(false)\n\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleAuthorChange = (e) => {\n        setAuthor(e.target.value)\n    }\n\n    const handlePriceChange = (e) => {\n        setPrice(e.target.value)\n    }\n\n    const handleNationalityChange = (e) => {\n        setNationality(e.target.value)\n    }\n\n    const handleURLChange = (e) => {\n        setURL(e.target.value)\n    }\n\n    const handleDueDateChange = (e) => {\n        setDueDate(e.target.value)\n    }\n\n    const clearErrorMsg = () => {\n        setTitleFailedMsg('')\n        setUrlFailedMsg('')\n    }\n\n    const handleUpdateEvent = async () => {\n        clearErrorMsg()\n        let data = {\n            title: updateTitle,\n            author: updateAuthor,\n            price: updatePrice,\n            nationality: updateNationality,\n            url: updateUrl,\n            due_date: updateDueDate,\n        }\n        await apiEditBookTodo(id, data)\n            .then((res) => {\n                if (res.data['is_updated']) {\n                    setRequestUpdate(1)\n                    setDisplayEditForm(false)\n                    setEditEnabled(false)\n                }\n            })\n            .catch((err) => {\n                // console.error(err.response.data.error)\n                let error_status_code = err.response.status\n                let error_msg = err.response.data.error\n                if (error_status_code === 400) {\n                    if (error_msg['is_title_exists'] && error_msg['is_url_exists']) {\n                        setTitleFailedMsg('The title has been exists')\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(true)\n                    } else if (error_msg['is_title_exists'] && error_msg['is_url_exists'] === false) {\n                        setTitleFailedMsg('The title has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(false)\n                    } else if (error_msg['is_title_exists'] === false && error_msg['is_url_exists']) {\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(false)\n                        setShowUrlFailedMsg(true)\n                    }\n                }\n                setRequestUpdate(-1)\n            })\n        setCheckUpdateAllow(true)\n    }\n\n    const handleUpdateCancelEvent = () => {\n        setRequestUpdate(1)\n        setCheckUpdateAllow(true)\n        setDisplayEditForm(false)\n        setEditEnabled(false)\n    }\n\n    const handleDeleteItemEvent = async () => {\n        await apiDeleteBookTodo(id)\n            .then((res) => {\n                setRequestUpdate(1)\n            })\n            .catch((err) => {\n                // console.error(err)\n                setRequestUpdate(-1)\n            })\n    }\n\n    const handleCancelDeleteItemEvent = () => {\n        setDisplayDeleteConfirm(false)\n    }\n\n    const displayDeleteItemConfirm = async () => {\n        setDisplayDeleteConfirm(true)\n    }\n\n\n    const changeEditCard = () => {\n        setCheckUpdateAllow(true)\n        setRequestEditId(updateId)\n        setEditEnabled(true)\n        setDisplayEditForm(true)\n    }\n\n    const checkTodoCard = async () => {\n        await apiCheckBookTodo(id, true)\n            .then((res) => {\n                setRequestUpdate(1)\n            })\n            .catch((err) => {\n                // console.error(err)\n                setRequestUpdate(-1)\n            })\n    }\n\n    const checkPropsUpdate = useCallback(() => {\n        const updatePropsData = () => {\n            setId(id)\n            setTitle(title)\n            setAuthor(author)\n            setPrice(price)\n            setNationality(nationality)\n            setURL(url)\n            setDueDate(dueDate)\n            // setDaysSinceCreated(daysSinceCreated)\n            setCheckUpdateAllow(false)\n        }\n        if (checkUpdateAllow) {\n            updatePropsData()\n        }\n    // }, [author, checkUpdateAllow, daysSinceCreated, dueDate, id, nationality, price, title, url])\n    }, [author, checkUpdateAllow, dueDate, id, nationality, price, title, url])\n\n    const updateWindowSize = useCallback(() => {\n        if (lastTimeWindowSize.x !== currentWindowSize.x) {\n            if (currentWindowSize.x < 1000) {\n                // setCardWidth('24rem')\n                setCardWidth('23rem')\n                setCardMinHeight('45vh')\n            } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n                // setCardWidth('28rem')\n                setCardWidth('33rem')\n                setCardMinHeight('43vh')\n            } else {\n                // setCardWidth('28rem')\n                setCardWidth('40rem')\n                // setCardMinHeight('35vh')\n                setCardMinHeight('33vh')\n            }\n            setLastTimeWindowSize(currentWindowSize)\n            // setRenderCardColor(cardColor) // 當偵測到視窗尺寸有變化時，則會重新渲染卡片的顏色\n        }\n    // }, [cardColor, currentWindowSize, lastTimeWindowSize])\n    }, [currentWindowSize, lastTimeWindowSize.x])\n\n    useEffect(() => {\n        checkPropsUpdate()\n        updateWindowSize()\n    }, [checkPropsUpdate, updateWindowSize])\n\n    return (\n        <div>\n            <div>\n                <Modal show={displayDeleteConfirm} backdrop=\"static\" keyboard={false}>\n                    <Modal.Header style={{ background: renderCardColor, color: 'white' }}>\n                        <Modal.Title>\n                            <p>Confirm action delete</p>\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Are you sure you want to delete this item <span style={{ fontWeight: 'bold' }}> {title}</span> ?\n                    </Modal.Body>\n                    <Modal.Footer style={{ borderColor: renderCardColor }}>\n                        <Button variant=\"primary\" onClick={handleDeleteItemEvent}>\n                            Yes\n                        </Button>\n                        <Button variant=\"secondary\" onClick={handleCancelDeleteItemEvent}>\n                            No\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n            <div>\n                {editEnabled && id === requestEditId ? (\n                    <div>\n                        {displayEditForm ? (\n                            <div className=\"book-todo-root-1\">\n                                <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                                    <Card.Header\n                                        variant=\"primary\"\n                                        className=\"book-todo-card-header\"\n                                        style={{ background: renderCardColor }}\n                                    >\n                                        Edit {title}\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <Form.Group controlId=\"formTitle\" className=\"align-items-left-2\">\n                                            <Form.Label className=\"form-horizontal.control-label\">Title</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                placeholder=\"Title\"\n                                                onChange={handleTitleChange}\n                                                value={updateTitle}\n                                            />\n                                            {showTitleFaildMsg ? (\n                                                <p className=\"field-error-remind\">{titleFailedMsg}</p>\n                                            ) : null}\n                                        </Form.Group>\n                                        <Row>\n                                            <Form.Group as={Col} controlId=\"formAuthor\" className=\"align-items-left-2\">\n                                                <Form.Label className=\"form-horizontal.control-label\">\n                                                    Author\n                                                </Form.Label>\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"Author\"\n                                                    onChange={handleAuthorChange}\n                                                    value={updateAuthor}\n                                                />\n                                            </Form.Group>\n                                            <Form.Group as={Col} controlId=\"formPrice\" className=\"align-items-left-2\">\n                                                <Form.Label className=\"form-horizontal.control-label\">\n                                                    Nationality\n                                                </Form.Label>\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"Nationality\"\n                                                    onChange={handleNationalityChange}\n                                                    value={updateNationality}\n                                                />\n                                            </Form.Group>\n                                        </Row>\n                                        <Form.Group controlId=\"formPrice\" className=\"align-items-left-2\">\n                                            <Form.Label className=\"form-horizontal.control-label\">Price</Form.Label>\n                                            <Form.Control\n                                                type=\"number\"\n                                                step=\"any\"\n                                                placeholder=\"Price\"\n                                                onChange={handlePriceChange}\n                                                value={updatePrice}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formURL\" className=\"align-items-left-2\">\n                                            <Form.Label className=\"form-horizontal.control-label\">URL</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                placeholder=\"URL\"\n                                                onChange={handleURLChange}\n                                                value={updateUrl}\n                                            />\n                                            {showUrlFailedMsg ? (\n                                                <p className=\"field-error-remind\">{urlFailedMsg}</p>\n                                            ) : null}\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formDueDate\" className=\"align-items-left-2\">\n                                            <Form.Label className=\"form-horizontal.control-label\">Due Date</Form.Label>\n                                            <Form.Control\n                                                type=\"date\"\n                                                placeholder=\"Due Date\"\n                                                onChange={handleDueDateChange}\n                                                value={updateDueDate}\n                                                timeFormat=\"YYYY-MM-DD\"\n                                            />\n                                        </Form.Group>\n                                        <div>\n                                            <Button\n                                                className=\"book-todo-btn-2\"\n                                                variant=\"primary\"\n                                                onClick={handleUpdateEvent}\n                                            >\n                                                Save changes\n                                            </Button>\n                                            <Button\n                                                className=\"book-todo-btn-2\"\n                                                variant=\"danger\"\n                                                onClick={handleUpdateCancelEvent}\n                                            >\n                                                Cancel\n                                            </Button>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        ) : null}\n                    </div>\n                ) : (\n                    <div className=\"book-todo-root-1\" style={{ minHeight: cardMinHeight }}>\n                        <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                            <Card.Header\n                                variant=\"primary\"\n                                className=\"book-todo-card-header\"\n                                style={{ background: renderCardColor }}\n                            >\n                                {title}\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                { dueDays > 0 ? (<p>Due Date: {dueDate} ( Due {dueDays} days )</p>) : <p>Due Date: {dueDate} ( Will due {willDueDays} days )</p> }\n                                    \n                                </Card.Title>\n                                <Card.Text as=\"div\" style={{ fontSize: '17px' }}>\n                                    Created At: {createdAt}\n                                    <br />\n                                    {nationality} - {author} - US${price} - <a href={url}>Link</a>\n                                    <br />\n                                    {isRead ? 'Read' : 'Unread'}\n                                    <br />\n                                </Card.Text>\n\n                                <div className=\"book-todo-btn-group-1\">\n                                    <Button className=\"book-todo-btn-1\" variant=\"success\" onClick={checkTodoCard}>\n                                        Complete\n                                    </Button>\n                                    <Button className=\"book-todo-btn-1\" variant=\"primary\" onClick={changeEditCard}>\n                                        Edit\n                                    </Button>\n                                    <Button\n                                        className=\"book-todo-btn-1\"\n                                        variant=\"danger\"\n                                        onClick={displayDeleteItemConfirm}\n                                    >\n                                        Delete\n                                    </Button>\n                                </div>\n                            </Card.Body>\n                            <Card.Footer style={{ borderColor: renderCardColor }}>\n                                <div style={{ fontWeight: 'bold' }}>Last Modified: {lastModifyDate}</div>\n                            </Card.Footer>\n                        </Card>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport '../../assets/css/form_level_style.css'\nimport { apiAddBookTodo } from '../../api.js'\nimport { Button, Card, Form, Row, Col } from 'react-bootstrap'\n\nexport default function AddTodo(props) {\n    const { setRequestUpdate, currentWindowSize, cardColor } = props\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [price, setPrice] = useState('')\n    const [nationality, setNationality] = useState('')\n    const [url, setURL] = useState('')\n    const [dueDate, setDueDate] = useState('')\n    const [showTitleFaildMsg, setShowTitleFaildMsg] = useState(false)\n    const [showUrlFailedMsg, setShowUrlFailedMsg] = useState(false)\n    const [titleFailedMsg, setTitleFailedMsg] = useState('')\n    const [urlFailedMsg, setUrlFailedMsg] = useState('')\n    const [lastTimeWindowSize, setLastTimeWindowSize] = useState({\n        x: 0,\n        y: 0,\n    })\n    const [cardWidth, setCardWidth] = useState('28rem')\n    const [renderCardColor] = useState(cardColor)\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleAuthorChange = (e) => {\n        setAuthor(e.target.value)\n    }\n\n    const handlePriceChange = (e) => {\n        setPrice(e.target.value)\n    }\n\n    const handleNationalityChange = (e) => {\n        setNationality(e.target.value)\n    }\n    const handleURLChange = (e) => {\n        setURL(e.target.value)\n    }\n    const handleDueDateChange = (e) => {\n        setDueDate(e.target.value)\n    }\n\n    const validateSubmitForm = () => {\n        return (\n            title.length > 0 &&\n            author.length > 0 &&\n            price.length > 0 &&\n            nationality.length > 0 &&\n            url.length > 0 &&\n            dueDate.length > 0\n        )\n    }\n\n    const clearForm = () => {\n        setTitle('')\n        setAuthor('')\n        setPrice('')\n        setNationality('')\n        setURL('')\n        setDueDate('')\n    }\n\n    const clearErrorMsg = () => {\n        setTitleFailedMsg('')\n        setUrlFailedMsg('')\n    }\n\n    const addTodoRequest = async () => {\n        clearErrorMsg()\n        let data = {\n            title: title,\n            author: author,\n            price: price,\n            // is_read: isRead,\n            nationality: nationality,\n            url: url,\n            due_date: dueDate,\n        }\n         await apiAddBookTodo(data)\n            .then((res) => {\n                if (res.data['is_writed']) {\n                    clearForm()\n                    setRequestUpdate(1)\n                }\n            })\n            .catch((err) => {\n                console.error(err)\n                let error_status_code = err.response.status\n                let error_msg = err.response.data.error\n                // console.error(error_status_code, error_msg)\n                if (error_status_code === 400) {\n                    if (error_msg['is_title_exists'] && error_msg['is_url_exists']) {\n                        setTitleFailedMsg('The title has been exists')\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(true)\n                    } else if (error_msg['is_title_exists'] && error_msg['is_url_exists'] === false) {\n                        setTitleFailedMsg('The title has been exists')\n                        setShowTitleFaildMsg(true)\n                        setShowUrlFailedMsg(false)\n                    } else if (error_msg['is_title_exists'] === false && error_msg['is_url_exists']) {\n                        setUrlFailedMsg('The url has been exists')\n                        setShowTitleFaildMsg(false)\n                        setShowUrlFailedMsg(true)\n                    }\n                }\n                // setRequestUpdate(-1)\n            })\n    }\n\n    const handleAddEvent = () => {\n        addTodoRequest()\n    }\n\n    const handleCancelEvent = () => {\n        clearForm()\n        setRequestUpdate(0)\n    }\n\n    useEffect(() => {\n        if (lastTimeWindowSize.x !== currentWindowSize.x) {\n            if (currentWindowSize.x < 1000) {\n                setCardWidth('24rem')\n            } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n                // setCardWidth('28rem')\n                setCardWidth('33em')\n            } else {\n                // setCardWidth('28rem')\n                setCardWidth('40rem')\n            }\n            setLastTimeWindowSize(currentWindowSize)\n            // setRenderCardColor(cardColor) // when detecting windows size changed, then re-render the card color\n        }\n        // }, [cardColor, currentWindowSize, currentWindowSize.x, lastTimeWindowSize.x])\n    }, [currentWindowSize, currentWindowSize.x, lastTimeWindowSize.x])\n\n    return (\n        <div>\n            <div className=\"book-todo-root-1\">\n                <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                    <Card.Header\n                        variant=\"primary\"\n                        className=\"book-todo-card-header\"\n                        style={{ background: renderCardColor }}\n                    >\n                        Add Todo\n                    </Card.Header>\n                    <Card.Body>\n                        <Form.Group controlId=\"formTitle\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">Title</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                placeholder=\"Title\"\n                                onChange={handleTitleChange}\n                                value={title}\n                            />\n                            {showTitleFaildMsg ? <p className=\"field-error-remind\">{titleFailedMsg}</p> : null}\n                        </Form.Group>\n                        <Row>\n                            <Form.Group as={Col} controlId=\"formAuthor\" className=\"align-items-left-2\">\n                                <Form.Label className=\"form-horizontal.control-label\">Author</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Author\"\n                                    onChange={handleAuthorChange}\n                                    value={author}\n                                />\n                            </Form.Group>\n                            <Form.Group as={Col} controlId=\"formPrice\" className=\"align-items-left-2\">\n                                <Form.Label className=\"form-horizontal.control-label\">Nationality</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Nationality\"\n                                    onChange={handleNationalityChange}\n                                    value={nationality}\n                                />\n                            </Form.Group>\n                        </Row>\n                        <Form.Group controlId=\"formPrice\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">Price</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                step=\"any\"\n                                placeholder=\"Price\"\n                                onChange={handlePriceChange}\n                                value={price}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formURL\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">URL</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"URL\" onChange={handleURLChange} value={url} />\n                            {showUrlFailedMsg ? <p className=\"field-error-remind\">{urlFailedMsg}</p> : null}\n                        </Form.Group>\n                        <Form.Group controlId=\"formDueDate\" className=\"align-items-left-2\">\n                            <Form.Label className=\"form-horizontal.control-label\">Due Date</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                placeholder=\"Due Date\"\n                                onChange={handleDueDateChange}\n                                value={dueDate}\n                                timeFormat=\"YYYY-MM-DD\"\n                            />\n                        </Form.Group>\n                        <div>\n                            <Button\n                                className=\"book-todo-btn-2\"\n                                variant=\"primary\"\n                                onClick={handleAddEvent}\n                                disabled={!validateSubmitForm()}\n                            >\n                                Save changes\n                            </Button>\n                            <Button className=\"book-todo-btn-2\" variant=\"danger\" onClick={handleCancelEvent}>\n                                Cancel\n                            </Button>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n    )\n}\n","export const orderByDropdownOptions = [\n    {'id': 1, 'value': 'due_date_first'},\n    {'id': 2, 'value': 'will_due_date_first'},\n    {'id': 3, 'value': 'latest_created_first'},\n    {'id': 4, 'value': 'oldest_created_first'},\n    {'id': 5, 'value': 'recent_last_modified_first'},\n    {'id': 6, 'value': 'oldest_last_modified_first'}\n]","import { format } from 'date-fns'\n\nexport const convertToLocalDate = (convert_datetime) => {\n    return format(new Date(convert_datetime), 'yyyy-MM-dd HH:mm:ss')\n}","import { useEffect, useRef } from 'react'\n\nfunction useInterval(callback: () => void, delay: number | null) {\n    const savedCallback = useRef(callback)\n\n    // Remember the latest callback if it changes.\n    useEffect(() => {\n        savedCallback.current = callback\n    }, [callback])\n\n    // Set up the interval.\n    useEffect(() => {\n        // Don't schedule if no delay is specified.\n        if (delay === null) {\n            return\n        }\n\n        const id = setInterval(() => savedCallback.current(), delay)\n\n        return () => clearInterval(id)\n    }, [delay])\n}\n\nexport default useInterval\n","export const getCurrentWindowSize = () => {\n    return {\n        x: window.innerWidth,\n        y: window.innerHeight,\n    }\n}","export const color = [\n    '#28bf28',\n    '#ff0000',\n    '#0000ff',\n    '#1e90ff',\n    '#ffa500',\n    '#800080',\n    '#000080',\n    '#0047ab',\n    '#ff8c00',\n    '#1e90ff',\n    '#9acd32',\n    '#ff1493',\n    '#0000cd',\n    '#fa8072',\n]\n\n// const randomHeaderColor = Math.floor(Math.random() * headerColor.length)\n\n// Math.floor(Math.random() * range), generate range index of color\nexport const randomColor = () => {\n    return color[Math.floor(Math.random() * color.length)]\n}\n","import React, { useState, useEffect } from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiCheckBookTodo } from '../../api.js'\n\nexport default function TodoBook(props) {\n    const {\n        setRequestUpdate,\n        id,\n        title,\n        author,\n        price,\n        isRead,\n        nationality,\n        url,\n        dueDate,\n        // daysSinceCreated,\n        lastModifyDate,\n        dueDays,\n        createdAt,\n        currentWindowSize,\n        cardColor,\n    } = props\n    const [cardWidth, setCardWidth] = useState('33rem')\n    const [cardMinHeight, setCardMinHeight] = useState('43vh')\n    const [lastTimeWindowSize, setLastTimeWindowSize] = useState({\n        x: 0,\n        y: 0,\n    })\n    const [renderCardColor] = useState(cardColor)\n\n    const revokeCompeltedItem = async () => {\n        await apiCheckBookTodo(id, false)\n            .then((res) => {\n                setRequestUpdate(1)\n            })\n            .catch((err) => {\n                // console.error(err)\n                setRequestUpdate(-1)\n            })\n    }\n\n    useEffect(() => {\n        if (lastTimeWindowSize.x !== currentWindowSize.x) {\n            if (currentWindowSize.x < 1000) {\n                setCardWidth('24rem')\n                setCardMinHeight('43vh')\n            } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n                // setCardWidth('28rem')\n                setCardWidth('33rem')\n                setCardMinHeight('43vh')\n            } else {\n                // setCardWidth('28rem')\n                setCardWidth('40rem')\n                setCardMinHeight('33vh')\n                // setCardMinHeight('35vh')\n            }\n            setLastTimeWindowSize(currentWindowSize)\n            // setRenderCardColor(cardColor) // when detecting windows size changed, then re-render the card color\n        }\n    // }, [cardColor, currentWindowSize, lastTimeWindowSize])\n    }, [currentWindowSize, lastTimeWindowSize])\n\n    return (\n        <div>\n            <div className=\"book-todo-root-1\" style={{ minHeight: cardMinHeight }}>\n                <Card style={{ borderColor: renderCardColor, width: cardWidth }}>\n                    <Card.Header\n                        variant=\"primary\"\n                        className=\"book-todo-card-header\"\n                        style={{ background: renderCardColor }}\n                    >\n                        {title}\n                    </Card.Header>\n                    <Card.Body>\n                        <Card.Title>\n                        { dueDays > 0 ? (<p>Due date {dueDate} ( Due {dueDays} days )</p>) : <p>Not overdue</p> }\n                        </Card.Title>\n                        <Card.Text as=\"div\" style={{ fontSize: '17px' }}>\n                            Created At: {createdAt}\n                            <br />\n                            {nationality} - {author} - US${price} - <a href={url}>Link</a>\n                            <br />\n                            {isRead ? 'Read' : 'Unread'}\n                            <br />\n                        </Card.Text>\n                        <div className=\"book-todo-btn-group-1\">\n                            <Button variant=\"danger\" onClick={revokeCompeltedItem}>\n                                Revoke\n                            </Button>\n                        </div>\n                    </Card.Body>\n                    <Card.Footer style={{ borderColor: renderCardColor }}>\n                        <div style={{ fontWeight: 'bold' }}>Completed time: {lastModifyDate}</div>\n                    </Card.Footer>\n                </Card>\n            </div>\n        </div>\n    )\n}\n","export const setToken = (access_token, refresh_token) => {\n    localStorage.setItem('access_token', access_token)\n    localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getToken = () => {\n    console.log('access token: ' + localStorage.getItem('access_token'))\n    console.log('refresh token: ' + localStorage.getItem('refresh_token'))\n}\n\nexport const setAccessToken = (access_token) => {\n    localStorage.setItem('access_token', access_token)\n}\n\nexport const getAccessToken = () => {\n    localStorage.getItem('access_token')\n}\n\nexport const setRefreshToken = (refresh_token) => {\n    localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getRefreshToken = () => {\n    localStorage.getItem('refresh_token')\n}\n\nexport const removeToken = () => {\n    localStorage.removeItem('access_token')\n}\n\nexport const checkTokenExists = () => {\n    return localStorage.getItem('access_token') !== null && localStorage.getItem('access_token') !== undefined\n}\n\nexport const removeAllLocalStorage = () => {\n    localStorage.clear()\n    sessionStorage.clear()\n}","import TodoBook from '../views/book/TodoBook'\nimport CompletedList from '../views/book/CompletedList'\nimport UserProfile from '../views/user/UserProfile'\nimport LoginPage from '../views/user/LoginPage'\nimport LogoutPage from '../views/user/LogoutPage'\nimport RegisterPage from '../views/user/RegisterPage'\nimport ApplyResetPasswordPage from '../views/user/ApplyResetPasswordPage'\nimport ResetPasswordPage from '../views/user/ResetPasswordPage'\nimport RegisterValidatePage from '../views/user/RegisterValidatePage'\n\n\nexport const UserRouter = [\n    {\n        path: '/todo/book',\n        name: 'TodoBook',\n        icon: '',\n        component: TodoBook,\n        path_prefix: '/user',\n    },\n    {\n        path: '/completed/book',\n        name: 'CompletedList',\n        icon: '',\n        component: CompletedList,\n        path_prefix: '/user',\n    },\n    {\n        path: '/profile',\n        name: 'UserProfile',\n        icon: '',\n        component: UserProfile,\n        path_prefix: '/user',\n    },\n]\n\nexport const AuthRouter = [\n    {\n        path: '/login',\n        name: 'Login',\n        icon: '',\n        component: LoginPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/logout',\n        name: 'Logout',\n        icon: '',\n        component: LogoutPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/register',\n        name: 'Register',\n        icon: '',\n        component: RegisterPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/confirm-account',\n        name: 'ConfirmAccount',\n        icon: '',\n        component: RegisterValidatePage,\n        path_prefix: '/session'\n    },\n    {\n        path: '/forget-password',\n        name: 'ApplyResetPassword',\n        icon: '',\n        component: ApplyResetPasswordPage,\n        path_prefix: '/session',\n    },\n    {\n        path: '/reset-password',\n        name: 'ResetPassword',\n        icon: '',\n        component: ResetPasswordPage,\n        path_prefix: '/session'\n    }\n]\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Button, ButtonGroup, Dropdown, DropdownButton, Container } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiFetchBookTodo } from '../../api.js'\nimport TodoList from './TodoList'\nimport AddTodo from './AddTodo'\nimport { orderByDropdownOptions } from './dropdown_options'\nimport { convertToLocalDate } from '../../components/Timer/dateFormat'\nimport useInterval from '../../components/Timer/useInterval'\nimport { getCurrentWindowSize } from '../../assets/js/getWindowSize.js'\nimport { randomColor } from '../../components/Cards/color'\n\n\nexport default function TodoBook(props) {\n    const [currentWindowSize, setCurrentWindowSize] = useState(getCurrentWindowSize())\n    const [todoListData, setTodoListData] = useState([])\n    const [updateData, setUpdateData] = useState(1)\n    const [hide, setHide] = useState(true)\n    const orderBy =\n        sessionStorage.getItem('book_todo_sort') === undefined || sessionStorage.getItem('book_todo_sort') === null\n            ? 'latest_created_first'\n            : sessionStorage.getItem('book_todo_sort')\n    const openAddTodoCard = () => {\n        setHide(false)\n        setUpdateData(-1)\n    }\n\n    const setBookTodoSort = (value) => {\n        sessionStorage.setItem('book_todo_sort', value)\n    }\n\n    const handleOrderByChange = (eventKey, event) => {\n        let orderBy = orderByDropdownOptions[eventKey].value\n        setBookTodoSort(orderBy)\n        setUpdateData(1)\n    }\n\n    const initPageData = useCallback(() => {\n        const fetchTodoList = async () => {\n            await apiFetchBookTodo(orderBy, false)\n                .then((res) => {\n                    const data = res.data.info\n                    setTodoListData(data)\n                    setUpdateData(0)\n                })\n                .catch((err) => {\n                    setUpdateData(-1)\n                    // window.location.reload()\n                })\n        }\n        if (updateData > 0) {\n            fetchTodoList()\n            setHide(true)\n        } else if (updateData === 0) {\n            setHide(true)\n        }\n    }, [orderBy, updateData])\n\n    useInterval(() => {\n        setCurrentWindowSize(getCurrentWindowSize())\n    }, 1000)\n\n    useEffect(() => {\n        initPageData()\n    }, [initPageData])\n\n    return (\n        <div>\n            <Container fluid>\n                <Button className=\"book-todo-btn-0\" variant=\"primary\" onClick={openAddTodoCard}>\n                    New\n                </Button>\n                <DropdownButton\n                    variant=\"light\"\n                    className=\"book-todo-btn-0\"\n                    as={ButtonGroup}\n                    title=\"Order By\"\n                    id=\"bg-nested-order-by-dropdown\"\n                    onSelect={handleOrderByChange}\n                >\n                    {orderByDropdownOptions.map((options, index) => {\n                        return options.value === orderBy ? (\n                            <Dropdown.Item key={options.id} eventKey={index} active>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        ) : (\n                            <Dropdown.Item key={options.id} eventKey={index}>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        )\n                    })}\n                </DropdownButton>\n                {hide ? null : <AddTodo setRequestUpdate={setUpdateData} currentWindowSize={currentWindowSize} cardColor={randomColor()} />}\n                {todoListData.map((task) => {\n                    return (\n                        <div key={task.id}>\n                            <TodoList\n                                id={task.id}\n                                title={task.title}\n                                author={task.author}\n                                price={task.price}\n                                nationality={task.nationality}\n                                url={task.url}\n                                dueDate={task.due_date}\n                                isRead={task.is_read}\n                                // daysSinceCreated={task.days_since_created}\n                                lastModifyDate={convertToLocalDate(task.last_modify_date)}\n                                createdAt={convertToLocalDate(task.created_at)}\n                                dueDays={task.due_days}\n                                willDueDays={task.will_due_days}\n                                hideTodoListItem={false}\n                                editEnabled={false}\n                                setRequestUpdate={setUpdateData}\n                                currentWindowSize={currentWindowSize}\n                                cardColor={randomColor()}\n                            />\n                        </div>\n                    )\n                })}\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { ButtonGroup, Dropdown, DropdownButton, Container } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiFetchBookTodo } from '../../api.js'\nimport CompletedTodoList from './CompletedTodoList'\nimport { orderByDropdownOptions } from './dropdown_options'\nimport { convertToLocalDate } from '../../components/Timer/dateFormat'\nimport useInterval from '../../components/Timer/useInterval'\nimport { getCurrentWindowSize } from '../../assets/js/getWindowSize.js'\nimport { randomColor } from '../../components/Cards/color'\n\n\nexport default function CompleteList(props) {\n    const [currentWindowSize, setCurrentWindowSize] = useState(getCurrentWindowSize())\n    const [todoListData, setTodoListData] = useState([])\n    const [updateData, setUpdateData] = useState(1)\n    const orderBy =\n        sessionStorage.getItem('book_todo_sort') === undefined || sessionStorage.getItem('book_todo_sort') === null\n            ? 'latest_created_first'\n            : sessionStorage.getItem('book_todo_sort')\n\n    const setBookTodoSort = (value) => {\n        sessionStorage.setItem('book_todo_sort', value)\n    }\n\n    const handleOrderByChange = (eventKey, event) => {\n        let orderBy = orderByDropdownOptions[eventKey].value\n        setBookTodoSort(orderBy)\n        setUpdateData(1)\n    }\n\n    const initPageData = useCallback(() => {\n        const fetchTodoList = async () => {\n            await apiFetchBookTodo(orderBy, true)\n                .then((res) => {\n                    const data = res.data.info\n                    setTodoListData(data)\n                    setUpdateData(-1)\n                })\n                .catch((err) => {\n                    setUpdateData(-1)\n                    // window.location.reload()\n                })\n        }\n        if (updateData > 0) {\n            fetchTodoList()\n        }\n    }, [orderBy, updateData])\n\n    useInterval(() => {\n        setCurrentWindowSize(getCurrentWindowSize())\n    }, 1000)\n\n    useEffect(() => {\n        initPageData()\n    }, [initPageData])\n\n    return (\n        <div>\n            <Container fluid>\n                <DropdownButton\n                    className=\"book-todo-btn-0\"\n                    variant=\"light\"\n                    as={ButtonGroup}\n                    title=\"Order By\"\n                    id=\"bg-nested-order-by-dropdown\"\n                    onSelect={handleOrderByChange}\n                >\n                    {orderByDropdownOptions.map((options, index) => {\n                        return options.value === orderBy ? (\n                            <Dropdown.Item key={options.id} eventKey={index} active>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        ) : (\n                            <Dropdown.Item key={options.id} eventKey={index}>\n                                <span style={{ fontSize: '18px' }}>{options.value}</span>\n                            </Dropdown.Item>\n                        )\n                    })}\n                </DropdownButton>\n                {todoListData.map((task) => {\n                    return (\n                        <div key={task.id}>\n                            <CompletedTodoList\n                                id={task.id}\n                                title={task.title}\n                                author={task.author}\n                                price={task.price}\n                                nationality={task.nationality}\n                                url={task.url}\n                                dueDate={task.due_date}\n                                isRead={task.is_read}\n                                // daysSinceCreated={task.days_since_created}\n                                lastModifyDate={convertToLocalDate(task.last_modify_date)}\n                                createdAt={convertToLocalDate(task.created_at)}\n                                dueDays={task.due_days}\n                                hideTodoListItem={false}\n                                editEnabled={false}\n                                setRequestUpdate={setUpdateData}\n                                currentWindowSize={currentWindowSize}\n                                cardColor={randomColor()}\n                            />\n                        </div>\n                    )\n                })}\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { Form, Card, Container } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiUpdateUserProfile } from '../../api.js'\n\nexport default function UserProfile(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [cardWidth, setCardWidth] = useState('28rem')\n\n    const updateUserProfile = useCallback(() => {\n        const fetchUserProfile = async () => {\n            apiUpdateUserProfile()\n                .then((res) => {\n                    let res_data = res.data.info\n                    setUsername(res_data['user'])\n                    setEmail(res_data['email'])\n                })\n                .catch((err) => {\n                    console.error(err.response.data)\n                })\n        }\n        fetchUserProfile()\n    }, [])\n\n    useEffect(() => {\n        updateUserProfile()\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('24rem')\n        } else if (currentWindowSize.x >= 1000) {\n            setCardWidth('30rem')\n        }\n    }, [updateUserProfile, currentWindowSize])\n\n    return (\n        <div>\n            <div className=\"card-root\">\n                <Container fluid>\n                    <Card\n                        style={{ width: cardWidth, height: '16rem' }}\n                        border=\"dark\"\n                        bg=\"light\"\n                        text=\"black\"\n                        className=\"card-mt-1\"\n                    >\n                        <Form>\n                            <Card.Header>User Profile</Card.Header>\n\n                            <Card.Body>\n                                <Form.Group controlId=\"formUsrname\" className=\"align-items-left-2\">\n                                    <Form.Label className=\"form-horizontal.control-label\">Usrename</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Username\" value={username} disabled />\n                                </Form.Group>\n                                <Form.Group controlId=\"formEmail\" className=\"align-items-left-2\">\n                                    <Form.Label className=\"form-horizontal.control-label\">Email</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Email\" value={email} disabled />\n                                </Form.Group>\n                            </Card.Body>\n                        </Form>\n                    </Card>\n                </Container>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container } from 'react-bootstrap'\nimport { setToken } from '../../auth.js'\nimport { apiUserLogin } from '../../api.js'\nimport '../../assets/css/login_page_style.css'\n\nexport default function LoginPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const history = useHistory()\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [displayErrorMessage, setDisplayErrorMessage] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('')\n    const [cardWidth, setCardWidth] = useState('28rem')\n    const [cardBtnSpacing, setCardBtnSpacing] = useState('10.5rem')\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const validateForm = () => {\n        return username.length === 0 || password.length === 0\n    }\n\n    const handleLoginSubmit = (e) => {\n        setErrorMessage('')\n        let data = JSON.stringify({\n            username: username,\n            password: password,\n        })\n        apiUserLogin(data)\n            .then((res) => {\n                let access_token = res.data['access']\n                let refresh_token = res.data['refresh']\n                setToken(access_token, refresh_token)\n                setDisplayErrorMessage(false)\n                history.push('/user/todo/book')\n            })\n            .catch((err) => {\n                // let error_status_code = err.response.status\n                // let error_msg = err.response.data.error\n                // alert(`${error_status_code}, ${error_msg}`)\n                setDisplayErrorMessage(true)\n                setErrorMessage('Login Failed')\n            })\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('23rem')\n            setCardBtnSpacing('4.5rem')\n        } else if (currentWindowSize.x >= 1000) {\n            setCardWidth('30rem')\n            setCardBtnSpacing('12.0rem')\n        }\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"light\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>User Login</Card.Header>\n                                <Card.Body>\n                                    <Form.Group controlId=\"formUsrname\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Usrename</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Username\"\n                                            onChange={handleUsernameChange}\n                                            value={username}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formPassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Password\"\n                                            onChange={handlePasswordChange}\n                                            value={password}\n                                        />\n                                    </Form.Group>\n                                    {displayErrorMessage ? (\n                                        <div className=\"field-error-remind\">{errorMessage}</div>\n                                    ) : null}\n                                    <div className=\"btn-mt-1\">\n                                        <Button\n                                            variant=\"primary\"\n                                            block\n                                            onClick={handleLoginSubmit}\n                                            disabled={validateForm()}\n                                        >\n                                            Login\n                                        </Button>\n                                    </div>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <span style={{ textAlign: 'left', marginRight: cardBtnSpacing }}>\n                                        <Link to=\"/session/register\">\n                                            <Button variant=\"success\">Register</Button>\n                                        </Link>\n                                    </span>\n\n                                    <span style={{ textAlign: 'right' }}>\n                                        <Link to=\"/session/forget-password\">Forget your password?</Link>\n                                    </span>\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { checkTokenExists, removeAllLocalStorage } from '../../auth'\nimport { apiLogoutRevokeToken } from '../../api.js'\n\nexport default function LogoutPage() {\n    const history = useHistory()\n\n    const handleUserLogout = useCallback(() => {\n        const revokeToken = async () => {\n            let data = {\n                refresh: localStorage.getItem('refresh_token'),\n            }\n            apiLogoutRevokeToken(data)\n                .then((res) => {\n                    removeAllLocalStorage()\n                    if (!checkTokenExists() && res.data['allow_logout'] === true) {\n                        history.push('/session/login')\n                    }\n                })\n                .catch((err) => {\n                    // console.error(err)\n                    removeAllLocalStorage()\n                    history.push('/session/login')\n                })\n        }\n        revokeToken()\n    }, [history])\n\n    useEffect(() => {\n        handleUserLogout()\n    }, [handleUserLogout])\n\n    return <div></div>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container, Alert } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport '../../assets/css/register_page_style.css'\nimport { apiRegisterUser, apiReissueRegister } from '../../api.js'\n\nexport default function RegisterPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [rePassword, setRePassword] = useState('')\n    const [showRegisterSuccess, setShowRegisterSuccess] = useState(false)\n    const [registerMsg, setRegisterMsg] = useState(false)\n    const [usernameFieldAlert, setUsernameFieldAlert] = useState('')\n    const [emailFieldAlert, setEmailFieldAlert] = useState('')\n    const [displayReissueMsg, setDisplayReissueMsg] = useState(false)\n    const [reissueMsg, setReissueMsg] = useState('')\n    const [cardWidth, setCardWidth] = useState('28rem')\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleRePasswordChange = (e) => {\n        setRePassword(e.target.value)\n    }\n\n    const checkSubmitValues = () => {\n        return (\n            username.length === 0 ||\n            email.length === 0 ||\n            password.length === 0 ||\n            rePassword.length === 0 ||\n            password !== rePassword\n        )\n    }\n\n    const clearAlertMessage = () => {\n        setUsernameFieldAlert('')\n        setEmailFieldAlert('')\n    }\n\n    const handleRegisterSubmit = () => {\n        clearAlertMessage()\n        if (username === 'admin') {\n            setUsernameFieldAlert(`The username 'admin' disable`)\n        } else {\n            let data = {\n                username: username,\n                email: email,\n                password: password,\n            }\n            apiRegisterUser(data)\n                .then((res) => {\n                    let data = res.data\n                    if (data['is_registered'] === true) {\n                        setShowRegisterSuccess(true)\n                        setRegisterMsg(data['message'])\n                    }\n                })\n                .catch((err) => {\n                    // console.error(err.response.data)\n                    setShowRegisterSuccess(false)\n                    let detail = err.response.data['error']\n                    if (detail['is_username_registered'] === true && detail['is_email_registered'] === true) {\n                        setUsernameFieldAlert('The username has been use')\n                        setEmailFieldAlert('The email has been registerd')\n                    } else if (detail['is_username_registered'] === true || detail['is_email_registered'] === true) {\n                        detail['is_username_registered'] === true\n                            ? setUsernameFieldAlert('The username has been use')\n                            : setEmailFieldAlert('The email has been registerd')\n                    }\n                })\n        }\n    }\n\n    const clearReissueMessage = () => {\n        setReissueMsg('')\n        setDisplayReissueMsg(false)\n    }\n\n    const handleReissueRequest = () => {\n        clearReissueMessage()\n        let data = {\n            username: username,\n            email: email,\n        }\n        apiReissueRegister(data)\n            .then((res) => {\n                let data = res.data\n                if (res.status === 200 && data['is_reissue'] === true) {\n                    setReissueMsg(data['message'])\n                    setDisplayReissueMsg(true)\n                    setShowRegisterSuccess(false)\n                }\n            })\n            .catch((err) => {\n                // console.log(err)\n                clearReissueMessage()\n            })\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('23rem')\n        } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n            setCardWidth('28rem')\n        } else {\n            setCardWidth('31rem')\n        }\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container fluid>\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"black\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>User Register</Card.Header>\n\n                                <Card.Body>\n                                    {showRegisterSuccess ? (\n                                        <div>\n                                            <Alert variant=\"success\">\n                                                <Alert.Heading>Register Successfully</Alert.Heading>\n                                                <p>{registerMsg}</p>\n                                                <hr />\n                                                <div className=\"btn-mt-1\">\n                                                    <Button variant=\"primary\" onClick={handleReissueRequest}>\n                                                        未收到認證信?\n                                                    </Button>\n                                                </div>\n                                            </Alert>\n                                        </div>\n                                    ) : null}\n                                    {displayReissueMsg ? (\n                                        <div>\n                                            <Alert variant=\"success\">\n                                                <Alert.Heading>Reissue Successfully</Alert.Heading>\n                                                <p>{reissueMsg}</p>\n                                            </Alert>\n                                        </div>\n                                    ) : null}\n                                    <Form.Group controlId=\"formUsrname\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Usrename</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Username\"\n                                            onChange={handleUsernameChange}\n                                            value={username}\n                                        />\n                                        <p className=\"field-alert\">{usernameFieldAlert}</p>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formEmail\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Email</Form.Label>\n                                        <Form.Control\n                                            type=\"email\"\n                                            placeholder=\"Email\"\n                                            onChange={handleEmailChange}\n                                            value={email}\n                                        />\n                                        <p className=\"field-alert\">{emailFieldAlert}</p>\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formPassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Password\"\n                                            onChange={handlePasswordChange}\n                                            value={password}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formRePassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">\n                                            Re-enter Password\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Re-Enter Password\"\n                                            onChange={handleRePasswordChange}\n                                            value={rePassword}\n                                        />\n                                    </Form.Group>\n                                    <Button\n                                        variant=\"primary\"\n                                        block\n                                        onClick={handleRegisterSubmit}\n                                        disabled={checkSubmitValues()}\n                                    >\n                                        Sign up\n                                    </Button>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <div style={{ textAlign: 'center' }}>\n                                        Already have account? <Link to=\"/session/login\">Sign in</Link>\n                                    </div>\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Button, Row, Container, Alert } from 'react-bootstrap'\nimport { apiRegisterValidate } from '../../api.js'\nimport useInterval from '../../components/Timer/useInterval'\nimport '../../assets/css/register_page_style.css'\n\nexport default function RegisterValidatePage() {\n    const history = useHistory()\n    const { search } = useLocation()\n    const searchParams = new URLSearchParams(search)\n    const token = searchParams.get('token')\n    const [showJumpLoginModal, setJumpLoginModal] = useState(false)\n    const [delay] = useState(1000)\n    const [countdown, setCountdown] = useState(5)\n    const [validateFailure, setValidateFailure] = useState(false)\n    const [failureAlertMsg, setFailureAlertMsg] = useState('')\n\n    useInterval(\n        () => {\n            countdown === 0 ? history.push('/session/login') : setCountdown(countdown - 1)\n        },\n        showJumpLoginModal ? delay : null\n    )\n\n    const handleLoginRedirect = () => {\n        history.push('/session/login')\n    }\n\n    const checkToken = useCallback(() => {\n        setFailureAlertMsg('')\n        const validateRegisterToken = async () => {\n            let data = {\n                token: token,\n            }\n            apiRegisterValidate(data)\n                .then((res) => {\n                    if (res.data['is_account_validated'] === true && res.status === 200) {\n                        setJumpLoginModal(true)\n                        setValidateFailure(false)\n                    } else {\n                        setJumpLoginModal(false)\n                        setValidateFailure(true)\n                    }\n                })\n                .catch((err) => {\n                    setJumpLoginModal(false)\n                    setValidateFailure(true)\n                    setFailureAlertMsg(err.response.data.error)\n                })\n        }\n        validateRegisterToken()\n    }, [token])\n\n    useEffect(() => {\n        checkToken()\n    }, [checkToken])\n\n    return (\n        <div>\n            <Container fluid>\n                <Row>\n                    {showJumpLoginModal ? (\n                        <div>\n                            <Alert show={true} variant=\"success\">\n                                <Alert.Heading>Register Account Activated Successfully</Alert.Heading>\n                                <div className=\"alert-text-1\">\n                                    <p>Will be jump to sign page: {countdown}</p>\n                                </div>\n                                <hr />\n                                <div className=\"d-flex justify-content-end\">\n                                    <Button variant=\"primary\" onClick={handleLoginRedirect}>\n                                        Sign in now\n                                    </Button>\n                                </div>\n                            </Alert>\n                        </div>\n                    ) : null}\n                </Row>\n                <Row>\n                    {validateFailure ? (\n                        <Alert variant=\"danger\">\n                            <Alert.Heading>Register Account Activate Failed</Alert.Heading>\n                            <div className=\"alert-text-1\">\n                                <p>{failureAlertMsg}</p>\n                            </div>\n                            <hr />\n                            <div className=\"d-flex justify-content-end\">\n                                <Button variant=\"danger\" onClick={handleLoginRedirect}>\n                                    Return to sign in\n                                </Button>\n                            </div>\n                        </Alert>\n                    ) : null}\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container, Alert } from 'react-bootstrap'\nimport { apiApplyResetPassword } from '../../api.js'\n\nexport default function ApplyResetPasswordPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const [email, setEmail] = useState('')\n    const [applySuccess, setApplySuccess] = useState(false)\n    const [applyFailure, setApplyFailure] = useState(false)\n    const [cardWidth, setCardWidth] = useState('28rem')\n    const [cardBtnSpacing, setCardBtnSpacing] = useState('10.5rem')\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const validateForm = () => {\n        return email.length === 0\n    }\n\n    const handleApplySubmit = () => {\n        let data = {\n            email: email,\n        }\n        apiApplyResetPassword(data)\n            .then((res) => {\n                if (res.data['apply_reset_success']) {\n                    setApplyFailure(false)\n                    setApplySuccess(true)\n                }\n            })\n            .catch((err) => {\n                // console.error(err)\n                setApplyFailure(true)\n                setApplySuccess(false)\n            })\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('23rem')\n            setCardBtnSpacing('4.2rem')\n        } else if (currentWindowSize.x >= 1000 && currentWindowSize.x <= 1600) {\n            setCardWidth('27rem')\n            setCardBtnSpacing('8.3rem')\n        } else {\n            setCardWidth('30rem')\n            setCardBtnSpacing('11.3rem')\n        }\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"light\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>Apply Reset Password</Card.Header>\n                                <Card.Body>\n                                    {applySuccess ? (\n                                        <Alert variant=\"success\">\n                                            <Alert.Heading>Apply Success</Alert.Heading>\n                                            <p className=\"mb-0\">\n                                                Please go to your mailbox to receive the reset password email\n                                            </p>\n                                        </Alert>\n                                    ) : null}\n                                    {applyFailure ? (\n                                        <Alert variant=\"danger\">\n                                            <Alert.Heading>Apply Failed</Alert.Heading>\n                                            <p className=\"mb-0\">\n                                                Please check field whether or enter duplicate username or email\n                                            </p>\n                                        </Alert>\n                                    ) : null}\n                                    <Form.Group controlId=\"formEmail\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">Email</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Email\"\n                                            onChange={handleEmailChange}\n                                            value={email}\n                                        />\n                                    </Form.Group>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <span style={{ textAlign: 'left', marginRight: cardBtnSpacing }}>\n                                        <Button variant=\"primary\" onClick={handleApplySubmit} disabled={validateForm()}>\n                                            Apply Reset Password\n                                        </Button>\n                                    </span>\n                                    <span style={{ textAlign: 'right' }}>\n                                        <Link to=\"/session/login\">\n                                            <Button variant=\"danger\">Return</Button>\n                                        </Link>\n                                    </span>\n                                    {/* <Row>\n                                        <Col md={9}>\n                                            <Button\n                                                variant=\"primary\"\n                                                onClick={handleApplySubmit}\n                                                disabled={validateForm()}\n                                            >\n                                                Apply Reset Password\n                                            </Button>\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to=\"/session/login\">\n                                                <Button variant=\"danger\">Return</Button>\n                                            </Link>\n                                        </Col>\n                                    </Row> */}\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card, Container, Alert, Modal } from 'react-bootstrap'\nimport '../../assets/css/form_level_style.css'\nimport { apiResetPassword } from '../../api.js'\nimport useInterval from '../../components/Timer/useInterval'\n\nexport default function RegisterPage(props) {\n    const currentWindowSize = props.currentWindowSize === undefined ? '28rem' : props.currentWindowSize\n    const history = useHistory()\n    const { search } = useLocation()\n    const searchParams = new URLSearchParams(search)\n    const token = searchParams.get('token')\n    const [newPassword, setNewPassword] = useState('')\n    const [reNewPassword, setReNewPassword] = useState('')\n    const [resetFailure, setResetFailure] = useState(false)\n    const [showJumpLoginModal, setJumpLoginModal] = useState(false)\n    const [delay] = useState(1000)\n    const [countdown, setCountdown] = useState(5)\n    const [errorMsg, setErrorMsg] = useState('')\n    const [cardWidth, setCardWidth] = useState('28rem')\n\n    const handlePasswordChange = (e) => {\n        setNewPassword(e.target.value)\n        // console.log('password changed: ' + e.target.value)\n    }\n\n    const handleRePasswordChange = (e) => {\n        setReNewPassword(e.target.value)\n        // console.log('re-password changed: ' + e.target.value)\n    }\n\n    const checkSubmitValues = () => {\n        return newPassword.length === 0 || reNewPassword.length === 0 || newPassword !== reNewPassword\n    }\n\n    useInterval(\n        () => {\n            countdown === 0 ? history.push('/session/login') : setCountdown(countdown - 1)\n        },\n        showJumpLoginModal ? delay : null\n    )\n\n    const handleResetPasswordSubmit = () => {\n        let data = {\n            token: token,\n            new_password: newPassword,\n        }\n        apiResetPassword(data)\n            .then((res) => {\n                if (res.status === 200 && res.data['is_password_changed']) {\n                    setResetFailure(false)\n                    setJumpLoginModal(true)\n                } else {\n                    setResetFailure(true)\n                    setJumpLoginModal(false)\n                }\n            })\n            .catch((err) => {\n                setResetFailure(true)\n                setJumpLoginModal(false)\n                setErrorMsg(err.response.data.error)\n            })\n    }\n\n    const handleLoginRedirect = () => {\n        history.push('/session/login')\n    }\n\n    useEffect(() => {\n        if (currentWindowSize.x < 1000) {\n            setCardWidth('22rem')\n        } else if (currentWindowSize.x >= 1000) {\n            setCardWidth('30rem')\n        }\n    }, [currentWindowSize])\n\n    return (\n        <div>\n            <Container fluid>\n                {showJumpLoginModal ? (\n                    <div>\n                        <Modal show={showJumpLoginModal} backdrop=\"static\" keyboard={false}>\n                            <Modal.Header>\n                                <Modal.Title>Reset Password Successfully</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Will be jump to sign page: {countdown}</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"primary\" onClick={handleLoginRedirect}>\n                                    Sign in now\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    </div>\n                ) : null}\n                <Row>\n                    <Col md={12}>\n                        <Card style={{ width: cardWidth }} border=\"black\" bg=\"light\" text=\"black\" className=\"card-mt-1\">\n                            <Form>\n                                <Card.Header>Reset Password</Card.Header>\n                                <Card.Body>\n                                    {resetFailure ? (\n                                        <Alert variant=\"danger\">\n                                            <Alert.Heading>Reset Password Failed</Alert.Heading>\n                                            <p className=\"mb-0\">{errorMsg}</p>\n                                        </Alert>\n                                    ) : null}\n                                    <Form.Group controlId=\"formPassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">New Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"New Password\"\n                                            onChange={handlePasswordChange}\n                                            value={newPassword}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formRePassword\" className=\"align-items-left-2\">\n                                        <Form.Label className=\"form-horizontal.control-label\">\n                                            Re-enter New Password\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            placeholder=\"Re-Enter New Password\"\n                                            onChange={handleRePasswordChange}\n                                            value={reNewPassword}\n                                        />\n                                    </Form.Group>\n                                </Card.Body>\n\n                                <Card.Footer>\n                                    <div className=\"link-mt-1\">\n                                        <Button\n                                            variant=\"primary\"\n                                            block\n                                            onClick={handleResetPasswordSubmit}\n                                            disabled={checkSubmitValues()}\n                                        >\n                                            Reset Password\n                                        </Button>\n                                    </div>\n                                </Card.Footer>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\n// import { UserRouter, AuthRouter } from '../../route/routes.js'\nimport { UserRouter } from '../../route/routes.js'\n\nexport default function UserHeader(props) {\n    const location = useLocation()\n    // const allRoutes = UserRouter.concat(AuthRouter)\n    const getBrandText = () => {\n        for (let i = 0; i < UserRouter.length; i++) {\n            if (location.pathname.indexOf(UserRouter[i].path_prefix + UserRouter[i].path) !== -1) {\n                return UserRouter[i].name\n            }\n        }\n    }\n    const username = props.username === undefined ? null : props.username\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n            <Container fluid>\n                <Navbar.Brand>\n                    {getBrandText()}\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <NavDropdown title=\"Guide\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item eventKey=\"5\" as={Link} to=\"/user/todo/book\">\n                                BookTodo\n                            </NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item eventKey=\"6\" as={Link} to=\"/user/completed/book\">\n                                CompelteTodo\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item eventKey=\"5\" as={Link} to=\"/user/profile\">\n                                Profile\n                            </NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            {/* <NavDropdown.Item eventKey=\"6\" as={Link} to=\"/session/logout\"> */}\n                            <NavDropdown.Item eventKey=\"6\" as={Link} to=\"/session/logout\">\n                                Logout\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav.Item className=\"ml-auto\">\n                        <Navbar.Text style={{ color: 'white', fontSize: '18px'}}>\n                            Signed in as: <span style= {{ fontWeight: 'bold' }}>{username}</span>\n                        </Navbar.Text>\n                    </Nav.Item>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n","import React, { useEffect, useCallback, useState, useRef } from 'react'\nimport { Route, Redirect, useHistory } from 'react-router-dom'\nimport UserHeader from '../components/Navbars/UserHeader'\n// import UserFooter from '../components/Footer/UserFooter'\nimport { UserRouter } from './routes'\nimport { apiRefreshToken, apiUpdateUserProfile, apiTokenExpireCheck, apiLogoutRevokeToken } from '../api.js'\nimport '../assets/css/protected_page_style.css'\nimport useInterval from '../components/Timer/useInterval'\nimport { checkTokenExists, removeAllLocalStorage } from '../auth'\n\nexport default function ProtectedRoutes(props) {\n    const history = useHistory()\n    const mainPanel = useRef(null)\n    const [allowRender, setAllowRender] = useState(false)\n    const [username, setUsername] = useState('')\n    const [checkTokenExpireTime, setCheckTokenExpireTime] = useState(60000) // default check token epxire time 1 minutes\n\n    const getRoutes = (routes) => {\n        let route = null\n        let index = 0\n        for (let prop of routes) {\n            if (prop.path_prefix === '/user' && history.location.pathname === prop.path_prefix + prop.path) {\n                route = (\n                    <Route\n                        path={prop.path_prefix + prop.path}\n                        render={(props) => <prop.component {...props} />}\n                        key={index}\n                    />\n                )\n                // console.log('current route: ' + history.location.pathname)\n                break\n            }\n            index++\n        }\n        index = 0\n        return route\n    }\n\n    const checkUserAuth = useCallback(() => {\n        // console.log('check user auth')\n        const fetchUserProfile = async () => {\n            if (username.length < 1 || username === '') {\n                // console.log('fetch update user profile')\n                await apiUpdateUserProfile()\n                    .then((res) => {\n                        let res_data = res.data.info\n                        setUsername(res_data['user'])\n                        // console.log('get user profile')\n                    })\n                    .catch((err) => {\n                        // console.error('error updating user profile: ' + err)\n                    })\n            }\n        }\n        const refreshTokenRequest = async () => {\n            let data = {\n                refresh: localStorage.getItem('refresh_token'),\n            }\n            await apiRefreshToken(data)\n                .then((res) => {\n                    localStorage.setItem('access_token', res.data['access'])\n                    // console.log('token expired time: ' + res.data['exp'])\n                    setAllowRender(true)\n                    fetchUserProfile()\n                })\n                .catch((err) => {\n                    setAllowRender(false)\n                    let data = {\n                        refresh: localStorage.getItem('refresh_token'),\n                    }\n                    apiLogoutRevokeToken(data)\n                        .then((res) => {\n                            removeAllLocalStorage()\n                            if (!checkTokenExists() && res.data['allow_logout'] === true) {\n                                history.push('/session/login')\n                            }\n                        })\n                        .catch((err) => {\n                            // console.error(err)\n                            removeAllLocalStorage()\n                            history.push('/session/login')\n                        })\n                })\n        }\n        const fetchUserAuth = async () => {\n            await apiTokenExpireCheck()\n                .then((res) => {\n                    let data = res.data\n                    let token_time_left = data['token_time_left']\n                    // console.log('token time left: ' + token_time_left)\n                    if (token_time_left > 60) {\n                        setCheckTokenExpireTime(60000)\n                    } else if (token_time_left === 60) {\n                        setCheckTokenExpireTime(20000)\n                    } else if (token_time_left >= 30 && token_time_left <= 60) {\n                        setCheckTokenExpireTime(10000)\n                    } else if (token_time_left <= 30) {\n                        refreshTokenRequest()\n                    }\n                    // console.log('changed timer check token expired time: ' + checkTokenExpireTime)\n                    setAllowRender(true)\n                    fetchUserProfile()\n                })\n                .catch((err) => {\n                    refreshTokenRequest()\n                })\n        }\n        fetchUserAuth()\n    }, [history, username])\n\n    const requestRenderRoute = () => {\n        let route = getRoutes(UserRouter)\n        // alert('will be clicked')\n        if (window.performance) {\n            if (performance.navigation.type === 1) {\n                checkUserAuth()\n            }\n        }\n        return route\n    }\n\n    const renderRoute = requestRenderRoute()\n\n    useInterval(() => {\n        // console.log('will be check token expire')\n        checkUserAuth()\n        // console.log('token expire check has been done')\n        // }, 900000)\n    }, checkTokenExpireTime)\n\n    useEffect(() => {\n        checkUserAuth()\n    }, [checkUserAuth])\n\n    return (\n        <div>\n            <div className=\"wrapper\">\n                <div className=\"mainPanel\" ref={mainPanel}>\n                    {allowRender ? (\n                        renderRoute === null ? (\n                            <Redirect to=\"/404\" />\n                        ) : (\n                            <div>\n                                <UserHeader username={username} />\n                                {renderRoute}\n                                {/* <UserFooter /> */}\n                            </div>\n                        )\n                    ) : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n// import { checkTokenExists } from '../auth'\nimport { Route, Redirect, useHistory } from 'react-router-dom'\nimport { AuthRouter } from './routes'\nimport '../assets/css/login_page_style.css'\nimport { getCurrentWindowSize } from '../assets/js/getWindowSize.js'\n\n\nexport default function AuthRoutes() {\n    const history = useHistory()\n\n    const getRoutes = (routes) => {\n        let route = null\n        let index = 0\n        for (let prop of routes) {\n            if (prop.path_prefix === '/session' && (history.location.pathname === prop.path_prefix + prop.path)) {\n                route = (\n                    <Route\n                        path={prop.path_prefix + prop.path}\n                        render={(props) => <prop.component {...props} currentWindowSize={getCurrentWindowSize()} />}\n                        key={index}\n                    />\n                )\n                break\n            }\n            index++\n        }\n        index = 0\n        return route\n    }\n\n    const renderRoute = () => {\n        let route = getRoutes(AuthRouter)\n        if (route === null) {\n            return <Redirect to=\"/404\" />\n        }\n        return <div>{route}</div>\n    }\n\n    return <div className=\"root\">{renderRoute()}</div>\n}\n","import React from 'react'\n\nexport const NotMatch404 = () => {\n    return (\n        <div>\n            <h1>404 Error Not Found Match Page.</h1>\n        </div>\n    )\n}\n","import React, { useEffect, useCallback } from 'react'\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom'\nimport ProtectedRoutes from './route/protected_route'\nimport AuthRoutes from './route/auth_route'\nimport { NotMatch404 } from './views/error/NotMatch404'\nimport { checkTokenExists } from './auth.js'\n\nexport default function App() {\n    const history = useHistory()\n    const { search } = useLocation()\n\n    const checkUserAuth = useCallback(() => {\n        let filter_prefix = String(history.location.pathname.split('/', 2))\n        let prefix = filter_prefix.replace(',', '/')\n        let current_access_path = history.location.pathname + search\n        if (prefix === '/session' && search.length > 0) {\n            history.push(current_access_path)\n        } else if (prefix === '/session' && search.length < 1) {\n            current_access_path === '/' ? history.push('/session/login') : history.push(current_access_path)\n        } else {\n            const fetchUserAuth = async () => {\n                if (!checkTokenExists()) {\n                    history.push('/session/login')\n                } else {\n                    current_access_path === '/' ? history.push('/user/todo/book') : history.push(current_access_path)\n                }\n            }\n            fetchUserAuth()\n        }\n    }, [history, search])\n\n    useEffect(() => {\n        checkUserAuth()\n    }, [checkUserAuth])\n\n    return (\n        <Switch>\n            <Route path=\"/404\" component={NotMatch404} />\n            <Route path=\"/session\" render={(props) => <AuthRoutes {...props} />} />\n            <Route exect path=\"/user\" render={(props) => <ProtectedRoutes {...props} />} />\n        </Switch>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}